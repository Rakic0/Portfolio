/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.navigation, .preloader, .content, body, html, .project, .home {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.bg.ac {
  z-index: 99999 !important;
}

.footer__social__link, .footer__email, .navigation__link, .navigation__link__to__home, .home__social__link, .home__email {
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

.footer__social__link:after, .footer__email:after, .navigation__link:after, .navigation__link__to__home:after, .home__social__link:after, .home__email:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.7, 0, 0.2, 1);
}

.footer__social__link:hover:after, .footer__email:hover:after, .navigation__link:hover:after, .navigation__link__to__home:hover:after, .home__social__link:hover:after, .home__email:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.footer__social__link:after, .footer__email:after, .navigation__link:after, .navigation__link__to__home:after, .home__social__link:after, .home__email:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.footer__social__link, .footer__email, .navigation__link, .navigation__link__to__home, .home__social__link, .home__email {
  display: inline-block;
}
.project__wrapper, .home__wrapper {
  color: inherit;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

::selection {
  color: #ececec;
  background-color: #d6635a;
}

html {
  font-size: 0.5208333333vw;
  position: fixed;
  overflow: hidden;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3020833333vw;
    position: static;
    height: auto;
    overflow: scroll;
    -webkit-overflow-scrolling: touch;
  }
}

body {
  position: fixed;
  color: #3f3b37;
  background-color: #ececec;
  font-family: "Lato";
  cursor: default;
}
@media (max-width: 767px) {
  body {
    position: static;
    height: auto;
  }
}

a {
  text-decoration: none;
  outline: none;
  color: inherit;
}

button {
  background: none;
  border: none;
  outline: none;
  cursor: pointer;
  color: inherit;
}

@media (max-width: 767px) {
  .content {
    position: static;
    height: auto;
  }
}

[data-animation=title] span,
[data-animation=paragraph] span,
[data-animation=label] span {
  display: inline-block;
  overflow: hidden;
}

.preloader {
  display: flex;
  text-align: center;
  background-color: #ececec;
  color: #3f3b37;
  z-index: 4;
}

.preloader__number {
  overflow: hidden;
  font-size: 6rem;
}

.preloader__number__text {
  display: inline-block;
}

.home {
  background-color: #ececec;
}

.home__inner {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 95%;
  padding: 0 1rem;
  margin: 0 auto;
  padding-top: 30rem;
  margin-bottom: 10rem;
}

.home__full-name {
  font-family: "Lato";
  font-size: 17rem;
  font-weight: 900;
  line-height: 0.8;
  margin-left: -1rem;
}

.home__email {
  font-family: "Lato";
  font-style: italic;
  font-size: 3rem;
  margin-top: 1rem;
}

.home__bottom {
  display: flex;
  justify-content: space-between;
  margin-top: 10rem;
  margin-bottom: 7rem;
}

.home__job-title {
  font-family: "Lato";
  font-weight: 700;
  font-size: 4.8rem;
  align-self: end;
}

.home__info {
  font-family: "Lato";
  font-weight: 900;
  font-size: 3rem;
  text-align: right;
}

.home__socials {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
  margin-top: 4rem;
}

.home__social__link {
  font-weight: 700;
  font-style: italic;
  font-size: 2.4rem;
  opacity: 0.7;
}

.home__line {
  background-color: #3f3b37;
  width: 100%;
  height: 0.8rem;
}

.home__projects {
  width: 95%;
  padding: 0 1rem;
  margin: 0 auto;
  margin-bottom: 10rem;
}

.home__project {
  display: grid;
  grid-template-columns: 45fr 55fr;
  gap: 3.5rem;
  position: relative;
}
@media (max-width: 767px) {
  .home__project {
    display: flex;
    flex-direction: column;
    padding: 0 2rem;
  }
}
.home__project:not(:last-of-type) {
  margin-bottom: 30rem;
}
.home__project:not(:last-of-type)::after {
  content: "";
  width: 100%;
  height: 0.1rem;
  position: absolute;
  left: 0;
  bottom: -15rem;
  background-color: #3f3b37;
  opacity: 0.25;
}

.home__project__label {
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 0.2rem;
  margin-bottom: 5rem;
  display: block;
}

.home__project__titles {
  margin-bottom: 8rem;
}

.home__project__title {
  font-weight: 700;
  font-size: 8rem;
  margin-left: -0.5rem;
  display: inline-block;
}
@media (max-width: 767px) {
  .home__project__title {
    line-height: 0.8;
  }
}

.home__project__role {
  font-size: 1.8rem;
  font-weight: 400;
  display: block;
}

.home__project__description {
  font-size: 3rem;
  font-weight: 400;
  margin-bottom: 3rem;
  max-width: 60rem;
  line-height: 1.1;
}

.home__project__explore {
  text-transform: uppercase;
  font-weight: 700;
  font-size: 1.8rem;
  opacity: 0.5;
}
.home__project__explore:hover .home__project__explore--arrow {
  margin-left: 1rem;
}

.home__project__explore--link {
  display: flex;
  align-items: center;
}

.home__project__explore--arrow {
  transition: all 0.3s cubic-bezier(0.7, 0, 0.2, 1);
  width: 4.3rem;
  height: 0.8rem;
}

.home__project__video__holder {
  background-color: #3f3b37;
  padding: 0.75rem;
  border-radius: 1rem;
  box-shadow: 0 0.5rem 1rem rgba(63, 59, 55, 0.3);
}

.col--2 {
  position: relative;
}

.home__project__video {
  width: 100%;
  border-radius: 1rem;
}

.home__project__image__holder {
  position: absolute;
  bottom: -3rem;
  left: -4rem;
}

.home__project__image {
  width: 20rem;
}

.home__footer {
  background-color: #3f3b37;
  color: #ececec;
  margin-bottom: -1rem;
  padding: 10rem 0;
}
.home__footer__wrapper {
  width: 95%;
  padding: 0 1rem;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  position: relative;
}
@media (max-width: 767px) {
  .home__footer__wrapper {
    display: flex;
    flex-direction: column;
  }
}
.home__footer__wrapper::after {
  content: "";
  display: block;
  width: 100%;
  height: 1px;
  background-color: #ececec;
  position: absolute;
  bottom: -10rem;
  left: 0;
  opacity: 0.6;
}

@media (max-width: 767px) {
  .home__about {
    margin-bottom: 5rem;
  }
}

.home__about__label,
.home__skills__label {
  font-size: 8rem;
  font-weight: 700;
  margin-bottom: 2rem;
}

.home__about__description {
  font-size: 1.8rem;
  opacity: 0.75;
  width: 50rem;
}
.home__about__description p {
  line-height: 1.1;
}

.home__skills__container {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.home__skills_skill {
  font-size: 1.8rem;
  font-weight: 700;
  border: 1px solid #ececec;
  border-radius: 0.5rem;
  padding: 0.5rem 1rem;
  cursor: default;
}

.project {
  color: #3f3b37;
  background-color: #ececec;
}

.project__wrapper {
  position: relative;
}

.navigation__link__to__home {
  position: fixed;
  top: 4rem;
  left: 4rem;
  font-size: 2rem;
  font-weight: 900;
  line-height: 1.4;
  z-index: 2;
}

.link__to__project,
.link__to__github {
  position: fixed;
  right: 4rem;
  width: 8rem;
  height: 8rem;
  background-color: #3f3b37;
  color: #ececec;
  transition: scale 0.4s cubic-bezier(0.4, 1, 0.8, 1);
  padding: 2rem;
  border-radius: 50%;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}
.link__to__project:hover,
.link__to__github:hover {
  scale: 1.05;
}

.link__to__project {
  bottom: 4rem;
}
.link__to__project__svg {
  width: 3.7rem;
  height: 3.7rem;
}

.link__to__github {
  bottom: 14rem;
}
.link__to__github__svg {
  width: 4.3rem;
  height: 3.8rem;
}

.project__about {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 95%;
  padding: 0 1rem;
  margin: 0 auto;
}
@media (max-width: 767px) {
  .project__about {
    height: auto;
    margin: 10rem auto;
    padding: 2rem 0;
    align-content: start;
  }
}

.project__about__titles {
  margin-bottom: 6rem;
}

.project__title {
  font-size: 8rem;
  font-weight: 700;
  margin-left: -0.5rem;
}

.project__role {
  font-size: 1.8rem;
}

.project__description {
  font-size: 3.4rem;
  margin-bottom: 15rem;
  display: inline-block;
  line-height: 1.1;
}

.project__info {
  display: flex;
  justify-content: space-between;
}
@media (max-width: 767px) {
  .project__info {
    flex-direction: column;
    gap: 2rem;
  }
}

.project__info__label {
  font-size: 2.6rem;
  font-weight: 700;
  margin-bottom: 1rem;
}

.project__info__text {
  font-size: 2.4rem;
  width: 40rem;
}

.project__showcases {
  width: 85%;
  padding: 0 1rem;
  margin: 0 auto;
}

.project__showcase__video {
  width: 100%;
}

.project__img {
  width: 100%;
  height: 88.3rem;
}
@media (max-width: 767px) {
  .project__img {
    height: 30rem;
  }
}
.project__img:last-of-type {
  margin-bottom: 10rem;
}

.navigation {
  color: #3f3b37;
  z-index: 3;
  position: fixed;
  width: 100%;
  left: 0;
  top: 1rem;
  height: auto;
  pointer-events: none;
}

.navigation__list {
  pointer-events: auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2rem;
  width: 95%;
  margin: 0 auto;
}

.navigation__item__home {
  position: absolute;
  top: 2rem;
  right: 2rem;
}

.navigation__link {
  font-size: 2rem;
  font-weight: 900;
  line-height: 1.5;
}

.navigation__link__cv {
  color: #ececec;
  background-color: #3f3b37;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 13.3rem;
  height: 4.5rem;
  border-radius: 1rem;
  font-size: 3.6rem;
  cursor: pointer;
  line-height: 1;
}

.footer {
  width: 100%;
  background-color: #3f3b37;
  color: #ececec;
}

.footer__wrapper {
  width: 95%;
  padding: 10rem 1rem;
  margin: 0 auto;
}
.footer__wrapper > div {
  margin-bottom: 4rem;
}

.footer__label {
  font-weight: 700;
  font-size: 8rem;
  margin-left: -0.5rem;
}

.footer__email {
  font-size: 2rem;
}

.footer__socials {
  width: 30rem;
  opacity: 0.7;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 4rem;
}

.footer__social__link {
  font-size: 2rem;
  font-weight: 700;
  font-style: italic;
  line-height: 1.1;
}

.footer__copyright {
  font-size: 2rem;
  font-weight: 700;
  font-style: italic;
  line-height: 1.2;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/