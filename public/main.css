/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.navigation, .preloader, .content, body, html, .project, .home {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.bg.ac {
  z-index: 99999 !important;
}

.footer__social__link, .footer__email, .navigation__link, .navigation__link__to__home, .home__social__link, .home__email {
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

.footer__social__link:after, .footer__email:after, .navigation__link:after, .navigation__link__to__home:after, .home__social__link:after, .home__email:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.7, 0, 0.2, 1);
}

.footer__social__link:hover:after, .footer__email:hover:after, .navigation__link:hover:after, .navigation__link__to__home:hover:after, .home__social__link:hover:after, .home__email:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.footer__social__link:after, .footer__email:after, .navigation__link:after, .navigation__link__to__home:after, .home__social__link:after, .home__email:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.footer__social__link, .footer__email, .navigation__link, .navigation__link__to__home, .home__social__link, .home__email {
  display: inline-block;
}
.project__wrapper, .home__wrapper {
  color: inherit;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

::selection {
  color: #ececec;
  background-color: #d6635a;
}

html {
  font-size: 0.5208333333vw;
  position: fixed;
  overflow: hidden;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3020833333vw;
    position: static;
    height: auto;
    overflow: scroll;
    -webkit-overflow-scrolling: touch;
  }
}

body {
  position: fixed;
  color: #3f3b37;
  background-color: #ececec;
  font-family: "Lato";
  cursor: default;
}
@media (max-width: 767px) {
  body {
    position: static;
    height: auto;
  }
}

a {
  text-decoration: none;
  outline: none;
  color: inherit;
}

button {
  background: none;
  border: none;
  outline: none;
  cursor: pointer;
  color: inherit;
}

@media (max-width: 767px) {
  .content {
    position: static;
    height: auto;
  }
}

[data-animation=title] span,
[data-animation=paragraph] span,
[data-animation=label] span {
  display: inline-block;
  overflow: hidden;
}

.preloader {
  display: flex;
  text-align: center;
  background-color: #ececec;
  color: #3f3b37;
  z-index: 4;
}

.preloader__number {
  overflow: hidden;
  font-size: 6rem;
}

.preloader__number__text {
  display: inline-block;
}

.home {
  background-color: #ececec;
}

.home__inner {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 95%;
  padding: 0 1rem;
  margin: 0 auto;
  padding-top: 30rem;
  margin-bottom: 10rem;
}

.home__full-name {
  font-family: "Lato";
  font-size: 17rem;
  font-weight: 900;
  line-height: 0.8;
  margin-left: -1rem;
}

.home__email {
  font-family: "Lato";
  font-style: italic;
  font-size: 3rem;
  margin-top: 1rem;
}

.home__bottom {
  display: flex;
  justify-content: space-between;
  margin-top: 10rem;
  margin-bottom: 7rem;
}

.home__job-title {
  font-family: "Lato";
  font-weight: 700;
  font-size: 4.8rem;
  align-self: end;
}

.home__info {
  font-family: "Lato";
  font-weight: 900;
  font-size: 3rem;
  text-align: right;
}

.home__socials {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
  margin-top: 4rem;
}

.home__social__link {
  font-weight: 700;
  font-style: italic;
  font-size: 2.4rem;
  opacity: 0.7;
}

.home__line {
  background-color: #3f3b37;
  width: 100%;
  height: 0.8rem;
}

.home__projects {
  width: 95%;
  padding: 0 1rem;
  margin: 0 auto;
  margin-bottom: 10rem;
}

.home__project {
  display: grid;
  grid-template-columns: 45fr 55fr;
  gap: 3.5rem;
  position: relative;
}
@media (max-width: 767px) {
  .home__project {
    display: flex;
    flex-direction: column;
    padding: 0 2rem;
  }
}
.home__project:not(:last-of-type) {
  margin-bottom: 30rem;
}
.home__project:not(:last-of-type)::after {
  content: "";
  width: 100%;
  height: 0.1rem;
  position: absolute;
  left: 0;
  bottom: -15rem;
  background-color: #3f3b37;
  opacity: 0.25;
}

.home__project__label {
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 0.2rem;
  margin-bottom: 5rem;
  display: block;
}

.home__project__titles {
  margin-bottom: 8rem;
}

.home__project__title {
  font-weight: 700;
  font-size: 8rem;
  margin-left: -0.5rem;
  display: inline-block;
}
@media (max-width: 767px) {
  .home__project__title {
    line-height: 0.8;
  }
}

.home__project__role {
  font-size: 1.8rem;
  font-weight: 400;
  display: block;
}

.home__project__description {
  font-size: 3rem;
  font-weight: 400;
  margin-bottom: 3rem;
  max-width: 60rem;
  line-height: 1.1;
}

.home__project__explore {
  text-transform: uppercase;
  font-weight: 700;
  font-size: 1.8rem;
  opacity: 0.5;
}
.home__project__explore:hover .home__project__explore--arrow {
  margin-left: 1rem;
}

.home__project__explore--link {
  display: flex;
  align-items: center;
}

.home__project__explore--arrow {
  transition: all 0.3s cubic-bezier(0.7, 0, 0.2, 1);
  width: 4.3rem;
  height: 0.8rem;
}

.home__project__video__holder {
  background-color: #3f3b37;
  padding: 0.75rem;
  border-radius: 1rem;
  box-shadow: 0 0.5rem 1rem rgba(63, 59, 55, 0.3);
}

.col--2 {
  position: relative;
}

.home__project__video {
  width: 100%;
  border-radius: 1rem;
}

.home__project__image__holder {
  position: absolute;
  bottom: -3rem;
  left: -4rem;
}

.home__project__image {
  width: 20rem;
}

.home__footer {
  background-color: #3f3b37;
  color: #ececec;
  margin-bottom: -1rem;
  padding: 10rem 0;
}
.home__footer__wrapper {
  width: 95%;
  padding: 0 1rem;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  position: relative;
}
@media (max-width: 767px) {
  .home__footer__wrapper {
    display: flex;
    flex-direction: column;
  }
}
.home__footer__wrapper::after {
  content: "";
  display: block;
  width: 100%;
  height: 1px;
  background-color: #ececec;
  position: absolute;
  bottom: -10rem;
  left: 0;
  opacity: 0.6;
}

@media (max-width: 767px) {
  .home__about {
    margin-bottom: 5rem;
  }
}

.home__about__label,
.home__skills__label {
  font-size: 8rem;
  font-weight: 700;
  margin-bottom: 2rem;
}

.home__about__description {
  font-size: 1.8rem;
  opacity: 0.75;
  width: 50rem;
}
.home__about__description p {
  line-height: 1.1;
}

.home__skills__container {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.home__skills_skill {
  font-size: 1.8rem;
  font-weight: 700;
  border: 1px solid #ececec;
  border-radius: 0.5rem;
  padding: 0.5rem 1rem;
  cursor: default;
}

.project {
  color: #3f3b37;
  background-color: #ececec;
}

.project__wrapper {
  position: relative;
}

.navigation__link__to__home {
  position: fixed;
  top: 4rem;
  left: 4rem;
  font-size: 2rem;
  font-weight: 900;
  line-height: 1.4;
  z-index: 2;
}

.link__to__project,
.link__to__github {
  position: fixed;
  right: 4rem;
  width: 8rem;
  height: 8rem;
  background-color: #3f3b37;
  color: #ececec;
  transition: scale 0.4s cubic-bezier(0.4, 1, 0.8, 1);
  padding: 2rem;
  border-radius: 50%;
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}
.link__to__project:hover,
.link__to__github:hover {
  scale: 1.05;
}

.link__to__project {
  bottom: 4rem;
}
.link__to__project__svg {
  width: 3.7rem;
  height: 3.7rem;
}

.link__to__github {
  bottom: 14rem;
}
.link__to__github__svg {
  width: 4.3rem;
  height: 3.8rem;
}

.project__about {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 95%;
  padding: 0 1rem;
  margin: 0 auto;
}
@media (max-width: 767px) {
  .project__about {
    height: auto;
    margin: 10rem auto;
    padding: 2rem 0;
    align-content: start;
  }
}

.project__about__titles {
  margin-bottom: 6rem;
}

.project__title {
  font-size: 8rem;
  font-weight: 700;
  margin-left: -0.5rem;
}

.project__role {
  font-size: 1.8rem;
}

.project__description {
  font-size: 3.4rem;
  margin-bottom: 15rem;
  display: inline-block;
  line-height: 1.1;
}

.project__info {
  display: flex;
  justify-content: space-between;
}
@media (max-width: 767px) {
  .project__info {
    flex-direction: column;
    gap: 2rem;
  }
}

.project__info__label {
  font-size: 2.6rem;
  font-weight: 700;
  margin-bottom: 1rem;
}

.project__info__text {
  font-size: 2.4rem;
  width: 40rem;
}

.project__showcases {
  width: 85%;
  padding: 0 1rem;
  margin: 0 auto;
}

.project__showcase__video {
  width: 100%;
}

.project__img {
  width: 100%;
  height: 88.3rem;
}
@media (max-width: 767px) {
  .project__img {
    height: 30rem;
  }
}
.project__img:last-of-type {
  margin-bottom: 10rem;
}

.navigation {
  color: #3f3b37;
  z-index: 3;
  position: fixed;
  width: 100%;
  left: 0;
  top: 1rem;
  height: auto;
  pointer-events: none;
}

.navigation__list {
  pointer-events: auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2rem;
  width: 95%;
  margin: 0 auto;
}

.navigation__item__home {
  position: absolute;
  top: 2rem;
  right: 2rem;
}

.navigation__link {
  font-size: 2rem;
  font-weight: 900;
  line-height: 1.5;
}

.navigation__link__cv {
  color: #ececec;
  background-color: #3f3b37;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 13.3rem;
  height: 4.5rem;
  border-radius: 1rem;
  font-size: 3.6rem;
  cursor: pointer;
  line-height: 1;
}

.footer {
  width: 100%;
  background-color: #3f3b37;
  color: #ececec;
  margin-top: 5rem;
}

.footer__wrapper {
  width: 95%;
  padding: 10rem 1rem;
  margin: 0 auto;
}
.footer__wrapper > div {
  margin-bottom: 4rem;
}

.footer__label {
  font-weight: 700;
  font-size: 8rem;
  margin-left: -0.5rem;
}

.footer__email {
  font-size: 2rem;
}

.footer__socials {
  width: 30rem;
  opacity: 0.7;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 4rem;
}

.footer__social__link {
  font-size: 2rem;
  font-weight: 700;
  font-style: italic;
  line-height: 1.1;
}

.footer__copyright {
  font-size: 2rem;
  font-weight: 700;
  font-style: italic;
  line-height: 1.2;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQWlGRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNDRjs7QURDQTtBQUNBOzs7Ozs7Ozs7OztFQVdFO0FDRUY7O0FEQUE7RUFDRTtBQ0dGOztBRERBOztFQUVFO0FDSUY7O0FERkE7O0VBRUU7QUNLRjs7QURIQTs7OztFQUlFO0VBQ0E7QUNNRjs7QURKQTtFQUNFO0VBQ0E7QUNPRjs7QUNqSUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FEb0lGOztBQ2pJQTtFQUNFO0VBQ0E7RUFDQTtBRG9JRjs7QUUvSUE7RUFDRTtBRmtKRjs7QUduSkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBSHNKRjs7QUduSkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FIc0pGOztBR25KQTtFQUNFO0VBQ0E7QUhzSkY7O0FHbkpBO0VBQ0U7RUFDQTtBSHNKRjs7QUdsSUE7RUFHRTtBSG1JRjtBSTVLQTtFQUNFO0FKOEtGOztBS3RMQTs7O0VBR0U7QUx5TEY7O0FLbExBO0VBQ0UsY0NUYztFRFVkLHlCQ1pZO0FOaU1kOztBS2xMQTtFQUVFO0VBRUE7RUFDQTtBTG1MRjtBT2dZSTtFRnhqQko7SUFRSTtJQUVBO0lBQ0E7SUFFQTtJQUNBO0VMa0xGO0FBQ0Y7O0FLL0tBO0VBR0U7RUFDQSxjQ3BDYTtFRHFDYix5QkNwQ2M7RURxQ2QsbUJDaENVO0VEa0NWO0FMK0tGO0FPK1dJO0VGdGlCSjtJQVdJO0lBQ0E7RUxnTEY7QUFDRjs7QUs3S0E7RUFDRTtFQUNBO0VBQ0E7QUxnTEY7O0FLN0tBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBTGdMRjs7QU8yVkk7RUZ4Z0JKO0lBSUk7SUFFQTtFTDZLRjtBQUNGOztBS3ZLRTs7O0VBQ0U7RUFDQTtBTDRLSjs7QVExUEE7RUFJRTtFQUNBO0VBRUEseUJGTGM7RUVNZCxjRlBhO0VFU2I7QVJ3UEY7O0FRclBBO0VBQ0U7RUFDQTtBUndQRjs7QVFyUEE7RUFDRTtBUndQRjs7QVMzUUE7RUFHRSx5QkhEYztBTjZRaEI7O0FTalFBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0FUa1FGOztBUy9QQTtFQUNFLG1CSHRCVTtFR3VCVjtFQUNBO0VBQ0E7RUFDQTtBVGtRRjs7QVMvUEE7RUFHRSxtQkhoQ1U7RUdpQ1Y7RUFDQTtFQUNBO0FUZ1FGOztBUzdQQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0FUZ1FGOztBUzdQQTtFQUNFLG1CSDlDVTtFRytDVjtFQUNBO0VBQ0E7QVRnUUY7O0FTN1BBO0VBQ0UsbUJIckRVO0VHc0RWO0VBQ0E7RUFDQTtBVGdRRjs7QVM3UEE7RUFDRTtFQUVBO0VBQ0E7RUFFQTtBVDhQRjs7QVMzUEE7RUFHRTtFQUNBO0VBQ0E7RUFDQTtBVDRQRjs7QVN6UEE7RUFDRSx5QkhwRmE7RUdxRmI7RUFDQTtBVDRQRjs7QVN2UEE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBVDBQRjs7QVN2UEE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBVDBQRjtBT3NPSTtFRXBlSjtJQU9JO0lBQ0E7SUFDQTtFVDJQRjtBQUNGO0FTelBFO0VBQ0U7QVQyUEo7QVN6UEk7RUFDRTtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBQ0E7RUFFQSx5QkgxSFM7RUcySFQ7QVR5UE47O0FTcFBBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBVHVQRjs7QVNyUEE7RUFDRTtBVHdQRjs7QVNyUEE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBVHdQRjtBTytMSTtFRTNiSjtJQU9JO0VUeVBGO0FBQ0Y7O0FTdFBBO0VBQ0U7RUFDQTtFQUNBO0FUeVBGOztBU3RQQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVR5UEY7O0FTdFBBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7QVR5UEY7QVN2UEU7RUFDRTtBVHlQSjs7QVNyUEE7RUFDRTtFQUNBO0FUd1BGOztBU3JQQTtFQUNFO0VBQ0E7RUFDQTtBVHdQRjs7QVNyUEE7RUFDRSx5QkgzTGE7RUc0TGI7RUFDQTtFQUNBO0FUd1BGOztBU2xQQTtFQUNFO0FUcVBGOztBU2xQQTtFQUNFO0VBQ0E7QVRxUEY7O0FTbFBBO0VBQ0U7RUFDQTtFQUNBO0FUcVBGOztBU2xQQTtFQUNFO0FUcVBGOztBU2hQQTtFQUNFLHlCSDFOYTtFRzJOYixjSDFOYztFRzJOZDtFQUNBO0FUbVBGO0FTalBFO0VBQ0U7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQU9BO0FUNE9KO0FPOEdJO0VFdldGO0lBU0k7SUFDQTtFVG9QSjtBQUNGO0FTaFBJO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQSx5QkhsUFU7RUdtUFY7RUFDQTtFQUNBO0VBQ0E7QVRrUE47O0FPNkZJO0VFMVVKO0lBRUk7RVRnUEY7QUFDRjs7QVM3T0E7O0VBRUU7RUFDQTtFQUNBO0FUZ1BGOztBUzdPQTtFQUNFO0VBQ0E7RUFDQTtBVGdQRjtBUzlPRTtFQUNFO0FUZ1BKOztBUzVPQTtFQUNFO0VBQ0E7RUFDQTtBVCtPRjs7QVM1T0E7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUE7QVQ4T0Y7O0FVL2dCQTtFQUdFLGNKRmE7RUlHYix5QkpGYztBTmtoQmhCOztBVXpnQkE7RUFHRTtBVjBnQkY7O0FVdmdCQTtFQUdFO0VBQ0E7RUFDQTtFQUVBO0VBQ0E7RUFFQTtFQUVBO0FWcWdCRjs7QVVsZ0JBOztFQUVFO0VBQ0E7RUFFQTtFQUNBO0VBRUEseUJKdkNhO0VJd0NiLGNKdkNjO0VJeUNkO0VBRUE7RUFDQTtFQUVBO0VBRUE7RUFDQTtFQUNBO0FWK2ZGO0FVN2ZFOztFQUNFO0FWZ2dCSjs7QVU1ZkE7RUFDRTtBVitmRjtBVTdmRTtFQUNFO0VBQ0E7QVYrZko7O0FVM2ZBO0VBQ0U7QVY4ZkY7QVU1ZkU7RUFDRTtFQUNBO0FWOGZKOztBVTFmQTtFQUNFO0VBQ0E7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQUNBO0FWNGZGO0FPVkk7RUcxZko7SUFXSTtJQUNBO0lBQ0E7SUFDQTtFVjZmRjtBQUNGOztBVXZmQTtFQUNFO0FWMGZGOztBVXhmQTtFQUNFO0VBQ0E7RUFDQTtBVjJmRjs7QVV4ZkE7RUFDRTtBVjJmRjs7QVV4ZkE7RUFDRTtFQUVBO0VBQ0E7RUFDQTtBVjBmRjs7QVV2ZkE7RUFDRTtFQUNBO0FWMGZGO0FPNUNJO0VHaGRKO0lBS0k7SUFDQTtFVjJmRjtBQUNGOztBVXhmQTtFQUNFO0VBQ0E7RUFDQTtBVjJmRjs7QVV4ZkE7RUFDRTtFQUNBO0FWMmZGOztBVXhmQTtFQUNFO0VBQ0E7RUFDQTtBVjJmRjs7QVV4ZkE7RUFDRTtBVjJmRjs7QVV4ZkE7RUFDRTtFQUNBO0FWMmZGO0FPNUVJO0VHamJKO0lBS0k7RVY0ZkY7QUFDRjtBVTFmRTtFQUNFO0FWNGZKOztBVzNwQkE7RUFFRSxjTERhO0VLRWI7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUE7QVg0cEJGOztBV3pwQkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWDRwQkY7O0FXenBCQTtFQUNFO0VBQ0E7RUFDQTtBWDRwQkY7O0FXenBCQTtFQUVFO0VBQ0E7RUFDQTtBWDJwQkY7O0FXeHBCQTtFQUNFLGNMbkNjO0VLb0NkLHlCTHJDYTtFS3VDYjtFQUNBO0VBQ0E7RUFFQTtFQUNBO0VBRUE7RUFFQTtFQUNBO0VBRUE7QVhzcEJGOztBWTFzQkE7RUFDRTtFQUVBLHlCTkZhO0VNR2IsY05GYztFTUlkO0FaMnNCRjs7QVl4c0JBO0VBQ0U7RUFDQTtFQUNBO0FaMnNCRjtBWXpzQkU7RUFDRTtBWjJzQko7O0FZdnNCQTtFQUNFO0VBQ0E7RUFDQTtBWjBzQkY7O0FZdnNCQTtFQUVFO0FaeXNCRjs7QVl0c0JBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FaeXNCRjs7QVl0c0JBO0VBR0U7RUFDQTtFQUNBO0VBRUE7QVpzc0JGOztBWW5zQkE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtBWnNzQkYsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYnNpdGUtdGVtcGxhdGUvLi9zdHlsZXMvYmFzZS9yZXNldC5zY3NzIiwid2VicGFjazovL3dlYnNpdGUtdGVtcGxhdGUvLi9zdHlsZXMvaW5kZXguc2NzcyIsIndlYnBhY2s6Ly93ZWJzaXRlLXRlbXBsYXRlLy4vc3R5bGVzL3V0aWxzL21peGlucy5zY3NzIiwid2VicGFjazovL3dlYnNpdGUtdGVtcGxhdGUvLi9zdHlsZXMvdXRpbHMvdmVuZG9ycy5zY3NzIiwid2VicGFjazovL3dlYnNpdGUtdGVtcGxhdGUvLi9zdHlsZXMvc2hhcmVkL2xpbmtzLnNjc3MiLCJ3ZWJwYWNrOi8vd2Vic2l0ZS10ZW1wbGF0ZS8uL3N0eWxlcy9zaGFyZWQvcGFnZXMuc2NzcyIsIndlYnBhY2s6Ly93ZWJzaXRlLXRlbXBsYXRlLy4vc3R5bGVzL2Jhc2UvYmFzZS5zY3NzIiwid2VicGFjazovL3dlYnNpdGUtdGVtcGxhdGUvLi9zdHlsZXMvdXRpbHMvdmFyaWFibGUuc2NzcyIsIndlYnBhY2s6Ly93ZWJzaXRlLXRlbXBsYXRlLy4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEvZGlzdC9faW5jbHVkZS1tZWRpYS5zY3NzIiwid2VicGFjazovL3dlYnNpdGUtdGVtcGxhdGUvLi9zdHlsZXMvY29tcG9uZW50cy9wcmVsb2FkZXIuc2NzcyIsIndlYnBhY2s6Ly93ZWJzaXRlLXRlbXBsYXRlLy4vc3R5bGVzL3BhZ2VzL2hvbWUvaG9tZS5zY3NzIiwid2VicGFjazovL3dlYnNpdGUtdGVtcGxhdGUvLi9zdHlsZXMvcGFnZXMvcHJvamVjdC9wcm9qZWN0LnNjc3MiLCJ3ZWJwYWNrOi8vd2Vic2l0ZS10ZW1wbGF0ZS8uL3N0eWxlcy9sYXlvdXQvbmF2aWdhdGlvbi5zY3NzIiwid2VicGFjazovL3dlYnNpdGUtdGVtcGxhdGUvLi9zdHlsZXMvbGF5b3V0L2Zvb3Rlci5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImh0bWwsXHJcbmJvZHksXHJcbmRpdixcclxuc3BhbixcclxuYXBwbGV0LFxyXG5vYmplY3QsXHJcbmlmcmFtZSxcclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNixcclxucCxcclxuYmxvY2txdW90ZSxcclxucHJlLFxyXG5hLFxyXG5hYmJyLFxyXG5hY3JvbnltLFxyXG5hZGRyZXNzLFxyXG5iaWcsXHJcbmNpdGUsXHJcbmNvZGUsXHJcbmRlbCxcclxuZGZuLFxyXG5lbSxcclxuaW1nLFxyXG5pbnMsXHJcbmtiZCxcclxucSxcclxucyxcclxuc2FtcCxcclxuc21hbGwsXHJcbnN0cmlrZSxcclxuc3Ryb25nLFxyXG5zdWIsXHJcbnN1cCxcclxudHQsXHJcbnZhcixcclxuYixcclxudSxcclxuaSxcclxuY2VudGVyLFxyXG5kbCxcclxuZHQsXHJcbmRkLFxyXG5vbCxcclxudWwsXHJcbmxpLFxyXG5maWVsZHNldCxcclxuZm9ybSxcclxubGFiZWwsXHJcbmxlZ2VuZCxcclxudGFibGUsXHJcbmNhcHRpb24sXHJcbnRib2R5LFxyXG50Zm9vdCxcclxudGhlYWQsXHJcbnRyLFxyXG50aCxcclxudGQsXHJcbmFydGljbGUsXHJcbmFzaWRlLFxyXG5jYW52YXMsXHJcbmRldGFpbHMsXHJcbmVtYmVkLFxyXG5maWd1cmUsXHJcbmZpZ2NhcHRpb24sXHJcbmZvb3RlcixcclxuaGVhZGVyLFxyXG5oZ3JvdXAsXHJcbm1lbnUsXHJcbm5hdixcclxub3V0cHV0LFxyXG5ydWJ5LFxyXG5zZWN0aW9uLFxyXG5zdW1tYXJ5LFxyXG50aW1lLFxyXG5tYXJrLFxyXG5hdWRpbyxcclxudmlkZW8ge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJvcmRlcjogMDtcclxuICBmb250LXNpemU6IDEwMCU7XHJcbiAgZm9udDogaW5oZXJpdDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xyXG5hcnRpY2xlLFxyXG5hc2lkZSxcclxuZGV0YWlscyxcclxuZmlnY2FwdGlvbixcclxuZmlndXJlLFxyXG5mb290ZXIsXHJcbmhlYWRlcixcclxuaGdyb3VwLFxyXG5tZW51LFxyXG5uYXYsXHJcbnNlY3Rpb24ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbmJvZHkge1xyXG4gIGxpbmUtaGVpZ2h0OiAxO1xyXG59XHJcbm9sLFxyXG51bCB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5ibG9ja3F1b3RlLFxyXG5xIHtcclxuICBxdW90ZXM6IG5vbmU7XHJcbn1cclxuYmxvY2txdW90ZTpiZWZvcmUsXHJcbmJsb2NrcXVvdGU6YWZ0ZXIsXHJcbnE6YmVmb3JlLFxyXG5xOmFmdGVyIHtcclxuICBjb250ZW50OiAnJztcclxuICBjb250ZW50OiBub25lO1xyXG59XHJcbnRhYmxlIHtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xyXG59XHJcbiIsImh0bWwsXG5ib2R5LFxuZGl2LFxuc3BhbixcbmFwcGxldCxcbm9iamVjdCxcbmlmcmFtZSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAsXG5ibG9ja3F1b3RlLFxucHJlLFxuYSxcbmFiYnIsXG5hY3JvbnltLFxuYWRkcmVzcyxcbmJpZyxcbmNpdGUsXG5jb2RlLFxuZGVsLFxuZGZuLFxuZW0sXG5pbWcsXG5pbnMsXG5rYmQsXG5xLFxucyxcbnNhbXAsXG5zbWFsbCxcbnN0cmlrZSxcbnN0cm9uZyxcbnN1YixcbnN1cCxcbnR0LFxudmFyLFxuYixcbnUsXG5pLFxuY2VudGVyLFxuZGwsXG5kdCxcbmRkLFxub2wsXG51bCxcbmxpLFxuZmllbGRzZXQsXG5mb3JtLFxubGFiZWwsXG5sZWdlbmQsXG50YWJsZSxcbmNhcHRpb24sXG50Ym9keSxcbnRmb290LFxudGhlYWQsXG50cixcbnRoLFxudGQsXG5hcnRpY2xlLFxuYXNpZGUsXG5jYW52YXMsXG5kZXRhaWxzLFxuZW1iZWQsXG5maWd1cmUsXG5maWdjYXB0aW9uLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbm91dHB1dCxcbnJ1YnksXG5zZWN0aW9uLFxuc3VtbWFyeSxcbnRpbWUsXG5tYXJrLFxuYXVkaW8sXG52aWRlbyB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuLm5hdmlnYXRpb24sIC5wcmVsb2FkZXIsIC5jb250ZW50LCBib2R5LCBodG1sLCAucHJvamVjdCwgLmhvbWUge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cblxuLnByZWxvYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uYmcuYWMge1xuICB6LWluZGV4OiA5OTk5OSAhaW1wb3J0YW50O1xufVxuXG4uZm9vdGVyX19zb2NpYWxfX2xpbmssIC5mb290ZXJfX2VtYWlsLCAubmF2aWdhdGlvbl9fbGluaywgLm5hdmlnYXRpb25fX2xpbmtfX3RvX19ob21lLCAuaG9tZV9fc29jaWFsX19saW5rLCAuaG9tZV9fZW1haWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLmZvb3Rlcl9fc29jaWFsX19saW5rOmFmdGVyLCAuZm9vdGVyX19lbWFpbDphZnRlciwgLm5hdmlnYXRpb25fX2xpbms6YWZ0ZXIsIC5uYXZpZ2F0aW9uX19saW5rX190b19faG9tZTphZnRlciwgLmhvbWVfX3NvY2lhbF9fbGluazphZnRlciwgLmhvbWVfX2VtYWlsOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDJweDtcbiAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBjdWJpYy1iZXppZXIoMC43LCAwLCAwLjIsIDEpO1xufVxuXG4uZm9vdGVyX19zb2NpYWxfX2xpbms6aG92ZXI6YWZ0ZXIsIC5mb290ZXJfX2VtYWlsOmhvdmVyOmFmdGVyLCAubmF2aWdhdGlvbl9fbGluazpob3ZlcjphZnRlciwgLm5hdmlnYXRpb25fX2xpbmtfX3RvX19ob21lOmhvdmVyOmFmdGVyLCAuaG9tZV9fc29jaWFsX19saW5rOmhvdmVyOmFmdGVyLCAuaG9tZV9fZW1haWw6aG92ZXI6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XG59XG5cbi5mb290ZXJfX3NvY2lhbF9fbGluazphZnRlciwgLmZvb3Rlcl9fZW1haWw6YWZ0ZXIsIC5uYXZpZ2F0aW9uX19saW5rOmFmdGVyLCAubmF2aWdhdGlvbl9fbGlua19fdG9fX2hvbWU6YWZ0ZXIsIC5ob21lX19zb2NpYWxfX2xpbms6YWZ0ZXIsIC5ob21lX19lbWFpbDphZnRlciB7XG4gIHRyYW5zZm9ybTogc2NhbGVYKDApO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XG59XG5cbi5mb290ZXJfX3NvY2lhbF9fbGluaywgLmZvb3Rlcl9fZW1haWwsIC5uYXZpZ2F0aW9uX19saW5rLCAubmF2aWdhdGlvbl9fbGlua19fdG9fX2hvbWUsIC5ob21lX19zb2NpYWxfX2xpbmssIC5ob21lX19lbWFpbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5wcm9qZWN0X193cmFwcGVyLCAuaG9tZV9fd3JhcHBlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG4qLFxuKjphZnRlcixcbio6YmVmb3JlIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBjb2xvcjogI2VjZWNlYztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q2NjM1YTtcbn1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMC41MjA4MzMzMzMzdnc7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICBodG1sIHtcbiAgICBmb250LXNpemU6IDEuMzAyMDgzMzMzM3Z3O1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gICAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuICB9XG59XG5cbmJvZHkge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGNvbG9yOiAjM2YzYjM3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjO1xuICBmb250LWZhbWlseTogXCJMYXRvXCI7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICBib2R5IHtcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIGhlaWdodDogYXV0bztcbiAgfVxufVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmNvbnRlbnQge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG59XG5cbltkYXRhLWFuaW1hdGlvbj10aXRsZV0gc3BhbixcbltkYXRhLWFuaW1hdGlvbj1wYXJhZ3JhcGhdIHNwYW4sXG5bZGF0YS1hbmltYXRpb249bGFiZWxdIHNwYW4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5wcmVsb2FkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7XG4gIGNvbG9yOiAjM2YzYjM3O1xuICB6LWluZGV4OiA0O1xufVxuXG4ucHJlbG9hZGVyX19udW1iZXIge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmb250LXNpemU6IDZyZW07XG59XG5cbi5wcmVsb2FkZXJfX251bWJlcl9fdGV4dCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmhvbWUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjO1xufVxuXG4uaG9tZV9faW5uZXIge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDk1JTtcbiAgcGFkZGluZzogMCAxcmVtO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy10b3A6IDMwcmVtO1xuICBtYXJnaW4tYm90dG9tOiAxMHJlbTtcbn1cblxuLmhvbWVfX2Z1bGwtbmFtZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9cIjtcbiAgZm9udC1zaXplOiAxN3JlbTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgbGluZS1oZWlnaHQ6IDAuODtcbiAgbWFyZ2luLWxlZnQ6IC0xcmVtO1xufVxuXG4uaG9tZV9fZW1haWwge1xuICBmb250LWZhbWlseTogXCJMYXRvXCI7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC1zaXplOiAzcmVtO1xuICBtYXJnaW4tdG9wOiAxcmVtO1xufVxuXG4uaG9tZV9fYm90dG9tIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW4tdG9wOiAxMHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogN3JlbTtcbn1cblxuLmhvbWVfX2pvYi10aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkxhdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiA0LjhyZW07XG4gIGFsaWduLXNlbGY6IGVuZDtcbn1cblxuLmhvbWVfX2luZm8ge1xuICBmb250LWZhbWlseTogXCJMYXRvXCI7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5ob21lX19zb2NpYWxzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBnYXA6IDFyZW07XG4gIG1hcmdpbi10b3A6IDRyZW07XG59XG5cbi5ob21lX19zb2NpYWxfX2xpbmsge1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xuICBvcGFjaXR5OiAwLjc7XG59XG5cbi5ob21lX19saW5lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNmM2IzNztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMC44cmVtO1xufVxuXG4uaG9tZV9fcHJvamVjdHMge1xuICB3aWR0aDogOTUlO1xuICBwYWRkaW5nOiAwIDFyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAxMHJlbTtcbn1cblxuLmhvbWVfX3Byb2plY3Qge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDQ1ZnIgNTVmcjtcbiAgZ2FwOiAzLjVyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9fcHJvamVjdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBhZGRpbmc6IDAgMnJlbTtcbiAgfVxufVxuLmhvbWVfX3Byb2plY3Q6bm90KDpsYXN0LW9mLXR5cGUpIHtcbiAgbWFyZ2luLWJvdHRvbTogMzByZW07XG59XG4uaG9tZV9fcHJvamVjdDpub3QoOmxhc3Qtb2YtdHlwZSk6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMC4xcmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogLTE1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2YzYjM3O1xuICBvcGFjaXR5OiAwLjI1O1xufVxuXG4uaG9tZV9fcHJvamVjdF9fbGFiZWwge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxldHRlci1zcGFjaW5nOiAwLjJyZW07XG4gIG1hcmdpbi1ib3R0b206IDVyZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaG9tZV9fcHJvamVjdF9fdGl0bGVzIHtcbiAgbWFyZ2luLWJvdHRvbTogOHJlbTtcbn1cblxuLmhvbWVfX3Byb2plY3RfX3RpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiA4cmVtO1xuICBtYXJnaW4tbGVmdDogLTAuNXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5ob21lX19wcm9qZWN0X190aXRsZSB7XG4gICAgbGluZS1oZWlnaHQ6IDAuODtcbiAgfVxufVxuXG4uaG9tZV9fcHJvamVjdF9fcm9sZSB7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmhvbWVfX3Byb2plY3RfX2Rlc2NyaXB0aW9uIHtcbiAgZm9udC1zaXplOiAzcmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICBtYXgtd2lkdGg6IDYwcmVtO1xuICBsaW5lLWhlaWdodDogMS4xO1xufVxuXG4uaG9tZV9fcHJvamVjdF9fZXhwbG9yZSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBvcGFjaXR5OiAwLjU7XG59XG4uaG9tZV9fcHJvamVjdF9fZXhwbG9yZTpob3ZlciAuaG9tZV9fcHJvamVjdF9fZXhwbG9yZS0tYXJyb3cge1xuICBtYXJnaW4tbGVmdDogMXJlbTtcbn1cblxuLmhvbWVfX3Byb2plY3RfX2V4cGxvcmUtLWxpbmsge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaG9tZV9fcHJvamVjdF9fZXhwbG9yZS0tYXJyb3cge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBjdWJpYy1iZXppZXIoMC43LCAwLCAwLjIsIDEpO1xuICB3aWR0aDogNC4zcmVtO1xuICBoZWlnaHQ6IDAuOHJlbTtcbn1cblxuLmhvbWVfX3Byb2plY3RfX3ZpZGVvX19ob2xkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2YzYjM3O1xuICBwYWRkaW5nOiAwLjc1cmVtO1xuICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICBib3gtc2hhZG93OiAwIDAuNXJlbSAxcmVtIHJnYmEoNjMsIDU5LCA1NSwgMC4zKTtcbn1cblxuLmNvbC0tMiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmhvbWVfX3Byb2plY3RfX3ZpZGVvIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDFyZW07XG59XG5cbi5ob21lX19wcm9qZWN0X19pbWFnZV9faG9sZGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IC0zcmVtO1xuICBsZWZ0OiAtNHJlbTtcbn1cblxuLmhvbWVfX3Byb2plY3RfX2ltYWdlIHtcbiAgd2lkdGg6IDIwcmVtO1xufVxuXG4uaG9tZV9fZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNmM2IzNztcbiAgY29sb3I6ICNlY2VjZWM7XG4gIG1hcmdpbi1ib3R0b206IC0xcmVtO1xuICBwYWRkaW5nOiAxMHJlbSAwO1xufVxuLmhvbWVfX2Zvb3Rlcl9fd3JhcHBlciB7XG4gIHdpZHRoOiA5NSU7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5ob21lX19mb290ZXJfX3dyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxufVxuLmhvbWVfX2Zvb3Rlcl9fd3JhcHBlcjo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogLTEwcmVtO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwLjY7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9fYWJvdXQge1xuICAgIG1hcmdpbi1ib3R0b206IDVyZW07XG4gIH1cbn1cblxuLmhvbWVfX2Fib3V0X19sYWJlbCxcbi5ob21lX19za2lsbHNfX2xhYmVsIHtcbiAgZm9udC1zaXplOiA4cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuXG4uaG9tZV9fYWJvdXRfX2Rlc2NyaXB0aW9uIHtcbiAgZm9udC1zaXplOiAxLjhyZW07XG4gIG9wYWNpdHk6IDAuNzU7XG4gIHdpZHRoOiA1MHJlbTtcbn1cbi5ob21lX19hYm91dF9fZGVzY3JpcHRpb24gcCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG59XG5cbi5ob21lX19za2lsbHNfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMXJlbTtcbn1cblxuLmhvbWVfX3NraWxsc19za2lsbCB7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZWNlY2VjO1xuICBib3JkZXItcmFkaXVzOiAwLjVyZW07XG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5wcm9qZWN0IHtcbiAgY29sb3I6ICMzZjNiMzc7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7XG59XG5cbi5wcm9qZWN0X193cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubmF2aWdhdGlvbl9fbGlua19fdG9fX2hvbWUge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogNHJlbTtcbiAgbGVmdDogNHJlbTtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogOTAwO1xuICBsaW5lLWhlaWdodDogMS40O1xuICB6LWluZGV4OiAyO1xufVxuXG4ubGlua19fdG9fX3Byb2plY3QsXG4ubGlua19fdG9fX2dpdGh1YiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDRyZW07XG4gIHdpZHRoOiA4cmVtO1xuICBoZWlnaHQ6IDhyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZjNiMzc7XG4gIGNvbG9yOiAjZWNlY2VjO1xuICB0cmFuc2l0aW9uOiBzY2FsZSAwLjRzIGN1YmljLWJlemllcigwLjQsIDEsIDAuOCwgMSk7XG4gIHBhZGRpbmc6IDJyZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgei1pbmRleDogMjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4ubGlua19fdG9fX3Byb2plY3Q6aG92ZXIsXG4ubGlua19fdG9fX2dpdGh1Yjpob3ZlciB7XG4gIHNjYWxlOiAxLjA1O1xufVxuXG4ubGlua19fdG9fX3Byb2plY3Qge1xuICBib3R0b206IDRyZW07XG59XG4ubGlua19fdG9fX3Byb2plY3RfX3N2ZyB7XG4gIHdpZHRoOiAzLjdyZW07XG4gIGhlaWdodDogMy43cmVtO1xufVxuXG4ubGlua19fdG9fX2dpdGh1YiB7XG4gIGJvdHRvbTogMTRyZW07XG59XG4ubGlua19fdG9fX2dpdGh1Yl9fc3ZnIHtcbiAgd2lkdGg6IDQuM3JlbTtcbiAgaGVpZ2h0OiAzLjhyZW07XG59XG5cbi5wcm9qZWN0X19hYm91dCB7XG4gIGhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogOTUlO1xuICBwYWRkaW5nOiAwIDFyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5wcm9qZWN0X19hYm91dCB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbjogMTByZW0gYXV0bztcbiAgICBwYWRkaW5nOiAycmVtIDA7XG4gICAgYWxpZ24tY29udGVudDogc3RhcnQ7XG4gIH1cbn1cblxuLnByb2plY3RfX2Fib3V0X190aXRsZXMge1xuICBtYXJnaW4tYm90dG9tOiA2cmVtO1xufVxuXG4ucHJvamVjdF9fdGl0bGUge1xuICBmb250LXNpemU6IDhyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1sZWZ0OiAtMC41cmVtO1xufVxuXG4ucHJvamVjdF9fcm9sZSB7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xufVxuXG4ucHJvamVjdF9fZGVzY3JpcHRpb24ge1xuICBmb250LXNpemU6IDMuNHJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMTVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cblxuLnByb2plY3RfX2luZm8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnByb2plY3RfX2luZm8ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAycmVtO1xuICB9XG59XG5cbi5wcm9qZWN0X19pbmZvX19sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMi42cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4ucHJvamVjdF9faW5mb19fdGV4dCB7XG4gIGZvbnQtc2l6ZTogMi40cmVtO1xuICB3aWR0aDogNDByZW07XG59XG5cbi5wcm9qZWN0X19zaG93Y2FzZXMge1xuICB3aWR0aDogODUlO1xuICBwYWRkaW5nOiAwIDFyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ucHJvamVjdF9fc2hvd2Nhc2VfX3ZpZGVvIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5wcm9qZWN0X19pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA4OC4zcmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5wcm9qZWN0X19pbWcge1xuICAgIGhlaWdodDogMzByZW07XG4gIH1cbn1cbi5wcm9qZWN0X19pbWc6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMTByZW07XG59XG5cbi5uYXZpZ2F0aW9uIHtcbiAgY29sb3I6ICMzZjNiMzc7XG4gIHotaW5kZXg6IDM7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMXJlbTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLm5hdmlnYXRpb25fX2xpc3Qge1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBnYXA6IDJyZW07XG4gIHdpZHRoOiA5NSU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubmF2aWdhdGlvbl9faXRlbV9faG9tZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAycmVtO1xuICByaWdodDogMnJlbTtcbn1cblxuLm5hdmlnYXRpb25fX2xpbmsge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5uYXZpZ2F0aW9uX19saW5rX19jdiB7XG4gIGNvbG9yOiAjZWNlY2VjO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2YzYjM3O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEzLjNyZW07XG4gIGhlaWdodDogNC41cmVtO1xuICBib3JkZXItcmFkaXVzOiAxcmVtO1xuICBmb250LXNpemU6IDMuNnJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxuLmZvb3RlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2YzYjM3O1xuICBjb2xvcjogI2VjZWNlYztcbiAgbWFyZ2luLXRvcDogNXJlbTtcbn1cblxuLmZvb3Rlcl9fd3JhcHBlciB7XG4gIHdpZHRoOiA5NSU7XG4gIHBhZGRpbmc6IDEwcmVtIDFyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLmZvb3Rlcl9fd3JhcHBlciA+IGRpdiB7XG4gIG1hcmdpbi1ib3R0b206IDRyZW07XG59XG5cbi5mb290ZXJfX2xhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiA4cmVtO1xuICBtYXJnaW4tbGVmdDogLTAuNXJlbTtcbn1cblxuLmZvb3Rlcl9fZW1haWwge1xuICBmb250LXNpemU6IDJyZW07XG59XG5cbi5mb290ZXJfX3NvY2lhbHMge1xuICB3aWR0aDogMzByZW07XG4gIG9wYWNpdHk6IDAuNztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiA0cmVtO1xufVxuXG4uZm9vdGVyX19zb2NpYWxfX2xpbmsge1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cblxuLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgZm9udC1zaXplOiAycmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG59IiwiJWNvdmVyIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG59XHJcblxyXG4lY2VudGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbkBtaXhpbiByYXRpb24oJGhlaWdodCwgJHdpZHRoKSB7XHJcbiAgZm9udC1zaXplOiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZy10b3A6ICR3aWR0aCAvICRoZWlnaHQgKiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcbiIsIi5iZy5hYyB7XHJcbiAgei1pbmRleDogOTk5OTkgIWltcG9ydGFudDtcclxufVxyXG4iLCIlbGlua19fd3JhcHBlciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbn1cclxuXHJcbiVsaW5rX19saW5lIHtcclxuICBjb250ZW50OiAnJztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAycHg7XHJcbiAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzICRlYXNlLWluLW91dDtcclxufVxyXG5cclxuJWxpbmtfX2xpbmUtLXZpc2libGUge1xyXG4gIHRyYW5zZm9ybTogc2NhbGVYKDEpO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgY2VudGVyO1xyXG59XHJcblxyXG4lbGlua19fbGluZS0taGlkZGVuIHtcclxuICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcclxuICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCBjZW50ZXI7XHJcbn1cclxuXHJcbiVsaW5rIHtcclxuICBAZXh0ZW5kICVsaW5rX193cmFwcGVyO1xyXG5cclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblxyXG4gICY6YWZ0ZXIge1xyXG4gICAgQGV4dGVuZCAlbGlua19fbGluZTtcclxuICAgIEBleHRlbmQgJWxpbmtfX2xpbmUtLXZpc2libGU7XHJcbiAgfVxyXG5cclxuICAmOmhvdmVyIHtcclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICBAZXh0ZW5kICVsaW5rX19saW5lLS1oaWRkZW47XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4lbGluay0taGlkZGVuIHtcclxuICBAZXh0ZW5kICVsaW5rX193cmFwcGVyO1xyXG5cclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblxyXG4gICY6YWZ0ZXIge1xyXG4gICAgQGV4dGVuZCAlbGlua19fbGluZTtcclxuICAgIEBleHRlbmQgJWxpbmtfX2xpbmUtLWhpZGRlbjtcclxuICB9XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIEBleHRlbmQgJWxpbmtfX2xpbmUtLXZpc2libGU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIiVwYWdlIHtcclxuICBAZXh0ZW5kICVjb3ZlcjtcclxuXHJcbiAgLy8gb3BhY2l0eTogMDtcclxuICAvLyB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuXHJcbiVwYWdlX193cmFwcGVyIHtcclxuICBjb2xvcjogaW5oZXJpdDtcclxufVxyXG4iLCIqLFxyXG4qOmFmdGVyLFxyXG4qOmJlZm9yZSB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuLy8gOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbi8vICAgZGlzcGxheTogbm9uZTtcclxuLy8gfVxyXG5cclxuOjpzZWxlY3Rpb24ge1xyXG4gIGNvbG9yOiAkY29sb3ItZ2FsbGVyeTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3Itcm9tYW47XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIEBleHRlbmQgJWNvdmVyO1xyXG4gIGZvbnQtc2l6ZTogY2FsYygxMDB2dyAvIDE5MjAgKiAxMCk7XHJcblxyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgZm9udC1zaXplOiBjYWxjKDEwMHZ3IC8gNzY4ICogMTApO1xyXG5cclxuICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcblxyXG4gICAgb3ZlcmZsb3c6IHNjcm9sbDtcclxuICAgIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcclxuICB9XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIEBleHRlbmQgJWNvdmVyO1xyXG5cclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgY29sb3I6ICRjb2xvci1tZXJsaW47XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWdhbGxlcnk7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250LWxhdG87XHJcblxyXG4gIGN1cnNvcjogZGVmYXVsdDtcclxuXHJcbiAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgfVxyXG59XHJcblxyXG5hIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBjb2xvcjogaW5oZXJpdDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBjb2xvcjogaW5oZXJpdDtcclxufVxyXG5cclxuLmNvbnRlbnQge1xyXG4gIEBleHRlbmQgJWNvdmVyO1xyXG5cclxuICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgcG9zaXRpb246IHN0YXRpYztcclxuXHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgfVxyXG59XHJcblxyXG5bZGF0YS1hbmltYXRpb249J3RpdGxlJ10sXHJcbltkYXRhLWFuaW1hdGlvbj0ncGFyYWdyYXBoJ10sXHJcbltkYXRhLWFuaW1hdGlvbj0nbGFiZWwnXSB7XHJcbiAgc3BhbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxufVxyXG4iLCIkY29sb3Itcm9tYW46ICNkNjYzNWE7XHJcbiRjb2xvci1tZXJsaW46ICMzZjNiMzc7XHJcbiRjb2xvci1nYWxsZXJ5OiAjZWNlY2VjO1xyXG5cclxuJGVhc2UtaW4tb3V0OiBjdWJpYy1iZXppZXIoMC43LCAwLCAwLjIsIDEpO1xyXG4kZWFzZS1vdXQtZXhwbzogY3ViaWMtYmV6aWVyKDAuNCwgMSwgMC44LCAxKTtcclxuXHJcbiRmb250LWxhdG86ICdMYXRvJztcclxuXHJcbiR6LWluZGV4ZXM6ICgncHJlbG9hZGVyJywgJ25hdmlnYXRpb24nLCAnbGluaycsICdjb250ZW50Jyk7XHJcbiIsIi8vICAgICBfICAgICAgICAgICAgXyAgICAgICAgICAgXyAgICAgICAgICAgICAgICAgICAgICAgICAgIF8gX1xuLy8gICAgKF8pICAgICAgICAgIHwgfCAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICB8IChfKVxuLy8gICAgIF8gXyBfXyAgIF9fX3wgfF8gICBfICBfX3wgfCBfX18gICBfIF9fIF9fXyAgIF9fXyAgX198IHxfICBfXyBfXG4vLyAgICB8IHwgJ18gXFwgLyBfX3wgfCB8IHwgfC8gX2AgfC8gXyBcXCB8ICdfIGAgXyBcXCAvIF8gXFwvIF9gIHwgfC8gX2AgfFxuLy8gICAgfCB8IHwgfCB8IChfX3wgfCB8X3wgfCAoX3wgfCAgX18vIHwgfCB8IHwgfCB8ICBfXy8gKF98IHwgfCAoX3wgfFxuLy8gICAgfF98X3wgfF98XFxfX198X3xcXF9fLF98XFxfXyxffFxcX19ffCB8X3wgfF98IHxffFxcX19ffFxcX18sX3xffFxcX18sX3xcbi8vXG4vLyAgICAgIFNpbXBsZSwgZWxlZ2FudCBhbmQgbWFpbnRhaW5hYmxlIG1lZGlhIHF1ZXJpZXMgaW4gU2Fzc1xuLy8gICAgICAgICAgICAgICAgICAgICAgICB2Mi4wLjBcbi8vXG4vLyAgICAgICAgaHR0cHM6Ly9lZHVhcmRvYm91Y2FzLmdpdGh1Yi5pby9pbmNsdWRlLW1lZGlhXG4vL1xuLy8gICAgICAgICBBdXRob3JzOiBFZHVhcmRvIEJvdWNhcyAoQGVkdWFyZG9ib3VjYXMpXG4vLyAgICAgICAgICAgICAgICAgIEtpdHR5IEdpcmF1ZGVsIChAa2l0dHlnaXJhdWRlbClcbi8vXG4vLyAgICAgIFRoaXMgcHJvamVjdCBpcyBsaWNlbnNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIE1JVCBsaWNlbnNlXG5AY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLy9cbi8vLyBpbmNsdWRlLW1lZGlhIGxpYnJhcnkgcHVibGljIGNvbmZpZ3VyYXRpb25cbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cbkB1c2UgJ3Nhc3M6bWF0aCc7XG5AdXNlICdzYXNzOm1hcCc7XG5AdXNlICdzYXNzOmxpc3QnO1xuQHVzZSAnc2FzczpzdHJpbmcnO1xuQHVzZSAnc2FzczptZXRhJztcblxuLy8vXG4vLy8gQ3JlYXRlcyBhIGxpc3Qgb2YgZ2xvYmFsIGJyZWFrcG9pbnRzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBicmVha3BvaW50IHdpdGggdGhlIGxhYmVsIGBwaG9uZWBcbi8vLyAgJGJyZWFrcG9pbnRzOiAoJ3Bob25lJzogMzIwcHgpO1xuLy8vXG4kYnJlYWtwb2ludHM6IChcbiAgJ3Bob25lJzogMzIwcHgsXG4gICd0YWJsZXQnOiA3NjhweCxcbiAgJ2Rlc2t0b3AnOiAxMDI0cHgsXG4pICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBDcmVhdGVzIGEgbGlzdCBvZiBzdGF0aWMgZXhwcmVzc2lvbnMgb3IgbWVkaWEgdHlwZXNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIG1lZGlhIHR5cGUgKHNjcmVlbilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbic6ICdzY3JlZW4nKTtcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc3RhdGljIGV4cHJlc3Npb24gd2l0aCBsb2dpY2FsIGRpc2p1bmN0aW9uIChPUiBvcGVyYXRvcilcbi8vLyAgJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4vLy8gICAgJ3JldGluYTJ4JzogJygtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSknXG4vLy8gICk7XG4vLy9cbiRtZWRpYS1leHByZXNzaW9uczogKFxuICAnc2NyZWVuJzogJ3NjcmVlbicsXG4gICdwcmludCc6ICdwcmludCcsXG4gICdoYW5kaGVsZCc6ICdoYW5kaGVsZCcsXG4gICdsYW5kc2NhcGUnOiAnKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpJyxcbiAgJ3BvcnRyYWl0JzogJyhvcmllbnRhdGlvbjogcG9ydHJhaXQpJyxcbiAgJ3JldGluYTJ4JzpcbiAgICAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSwgKG1pbi1yZXNvbHV0aW9uOiAyZHBweCknLFxuICAncmV0aW5hM3gnOlxuICAgICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAzNTBkcGkpLCAobWluLXJlc29sdXRpb246IDNkcHB4KScsXG4pICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBEZWZpbmVzIGEgbnVtYmVyIHRvIGJlIGFkZGVkIG9yIHN1YnRyYWN0ZWQgZnJvbSBlYWNoIHVuaXQgd2hlbiBkZWNsYXJpbmcgYnJlYWtwb2ludHMgd2l0aCBleGNsdXNpdmUgaW50ZXJ2YWxzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHBpeGVscyBpcyBkZWZpbmVkIGFzIGAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MTI4cHgnKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDEyOXB4KSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBlbXMgaXMgZGVmaW5lZCBhcyBgMC4wMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIwZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIwLjAxZW0pIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHJlbXMgaXMgZGVmaW5lZCBhcyBgMC4xYCBieSBkZWZhdWx0LCB0byBiZSB1c2VkIHdpdGggYGZvbnQtc2l6ZTogNjIuNSU7YFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIuMHJlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMi4xcmVtKSB7fVxuLy8vXG4kdW5pdC1pbnRlcnZhbHM6IChcbiAgJ3B4JzogMSxcbiAgJ2VtJzogMC4wMSxcbiAgJ3JlbSc6IDAuMSxcbiAgJyc6IDAsXG4pICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBEZWZpbmVzIHdoZXRoZXIgc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllcyBpcyBhdmFpbGFibGUsIHVzZWZ1bCBmb3IgY3JlYXRpbmcgc2VwYXJhdGUgc3R5bGVzaGVldHNcbi8vLyBmb3IgYnJvd3NlcnMgdGhhdCBkb24ndCBzdXBwb3J0IG1lZGlhIHF1ZXJpZXMuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRGlzYWJsZXMgc3VwcG9ydCBmb3IgbWVkaWEgcXVlcmllc1xuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAuZm9vIHtcbi8vLyAgICBjb2xvcjogdG9tYXRvO1xuLy8vICB9XG4vLy9cbiRpbS1tZWRpYS1zdXBwb3J0OiB0cnVlICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBTZWxlY3RzIHdoaWNoIGJyZWFrcG9pbnQgdG8gZW11bGF0ZSB3aGVuIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgZGlzYWJsZWQuIE1lZGlhIHF1ZXJpZXMgdGhhdCBzdGFydCBhdCBvclxuLy8vIGludGVyY2VwdCB0aGUgYnJlYWtwb2ludCB3aWxsIGJlIGRpc3BsYXllZCwgYW55IG90aGVycyB3aWxsIGJlIGlnbm9yZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICAuZm9vIHtcbi8vLyAgICBjb2xvcjogdG9tYXRvO1xuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIE5PVCBzaG93IGJlY2F1c2UgaXQgZG9lcyBub3QgaW50ZXJjZXB0IHRoZSBkZXNrdG9wIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ3RhYmxldCc7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PWRlc2t0b3AnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnICFkZWZhdWx0O1xuXG4vLy9cbi8vLyBTZWxlY3RzIHdoaWNoIG1lZGlhIGV4cHJlc3Npb25zIGFyZSBhbGxvd2VkIGluIGFuIGV4cHJlc3Npb24gZm9yIGl0IHRvIGJlIHVzZWQgd2hlbiBtZWRpYSBxdWVyaWVzXG4vLy8gYXJlIG5vdCBzdXBwb3J0ZWQuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVGhpcyBtZWRpYSBxdWVyeSB3aWxsIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBhbmQgY29udGFpbnMgb25seSBhY2NlcHRlZCBtZWRpYSBleHByZXNzaW9uc1xuLy8vICAkaW0tbWVkaWEtc3VwcG9ydDogZmFsc2U7XG4vLy8gICRpbS1uby1tZWRpYS1icmVha3BvaW50OiAnZGVza3RvcCc7XG4vLy8gICRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nKTtcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49dGFibGV0JywgJ3NjcmVlbicpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgIC5mb28ge1xuLy8vICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGludGVyY2VwdHMgdGhlIHN0YXRpYyBicmVha3BvaW50IGJ1dCBjb250YWlucyBhIG1lZGlhIGV4cHJlc3Npb24gdGhhdCBpcyBub3QgYWNjZXB0ZWRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdyZXRpbmEyeCcpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIGNvbG9yOiB0b21hdG87XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyAgLyogTm8gb3V0cHV0ICovXG4vLy9cbiRpbS1uby1tZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nLCAncG9ydHJhaXQnLCAnbGFuZHNjYXBlJykgIWRlZmF1bHQ7XG5cbi8vLy9cbi8vLyBDcm9zcy1lbmdpbmUgbG9nZ2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEtpdHR5IEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cbi8vL1xuLy8vIExvZyBhIG1lc3NhZ2UgZWl0aGVyIHdpdGggYEBlcnJvcmAgaWYgc3VwcG9ydGVkXG4vLy8gZWxzZSB3aXRoIGBAd2FybmAsIHVzaW5nIGBmZWF0dXJlLWV4aXN0cygnYXQtZXJyb3InKWBcbi8vLyB0byBkZXRlY3Qgc3VwcG9ydC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBmdW5jdGlvbiBpbS1sb2coJG1lc3NhZ2UpIHtcbiAgQGlmIG1ldGEuZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJykge1xuICAgIEBlcnJvciAkbWVzc2FnZTtcbiAgfSBAZWxzZSB7XG4gICAgQHdhcm4gJG1lc3NhZ2U7XG4gICAgJF86IG5vb3AoKTtcbiAgfVxuXG4gIEByZXR1cm4gJG1lc3NhZ2U7XG59XG5cbi8vL1xuLy8vIFdyYXBwZXIgbWl4aW4gZm9yIHRoZSBsb2cgZnVuY3Rpb24gc28gaXQgY2FuIGJlIHVzZWQgd2l0aCBhIG1vcmUgZnJpZW5kbHlcbi8vLyBBUEkgdGhhbiBgQGlmIGltLWxvZygnLi4nKSB7fWAgb3IgYCRfOiBpbS1sb2coJy4uJylgLiBCYXNpY2FsbHksIHVzZSB0aGUgZnVuY3Rpb25cbi8vLyB3aXRoaW4gZnVuY3Rpb25zIGJlY2F1c2UgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbiBhIGZ1bmN0aW9uXG4vLy8gYW5kIHVzZSB0aGUgbWl4aW4gZXZlcnl3aGVyZSBlbHNlIGJlY2F1c2UgaXQncyBtdWNoIG1vcmUgZWxlZ2FudC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBtaXhpbiBsb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGltLWxvZygkbWVzc2FnZSkge1xuICB9XG59XG5cbi8vL1xuLy8vIEZ1bmN0aW9uIHdpdGggbm8gYEByZXR1cm5gIGNhbGxlZCBuZXh0IHRvIGBAd2FybmAgaW4gU2FzcyAzLjNcbi8vLyB0byB0cmlnZ2VyIGEgY29tcGlsaW5nIGVycm9yIGFuZCBzdG9wIHRoZSBwcm9jZXNzLlxuLy8vXG5AZnVuY3Rpb24gbm9vcCgpIHtcbn1cblxuLy8vXG4vLy8gRGV0ZXJtaW5lcyB3aGV0aGVyIGEgbGlzdCBvZiBjb25kaXRpb25zIGlzIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludC5cbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAcmV0dXJuIHtCb29sZWFufSAtIFJldHVybnMgdHJ1ZSBpZiB0aGUgY29uZGl0aW9ucyBhcmUgaW50ZXJjZXB0ZWQgYnkgdGhlIHN0YXRpYyBicmVha3BvaW50XG4vLy9cbkBmdW5jdGlvbiBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSB7XG4gICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlOiBtYXAuZ2V0KCRicmVha3BvaW50cywgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQpO1xuXG4gIEBpZiBub3QgJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUge1xuICAgIEBpZiBpbS1sb2coJ2AjeyRpbS1uby1tZWRpYS1icmVha3BvaW50fWAgaXMgbm90IGEgdmFsaWQgYnJlYWtwb2ludC4nKSB7XG4gICAgfVxuICB9XG5cbiAgQGVhY2ggJGNvbmRpdGlvbiBpbiAkY29uZGl0aW9ucyB7XG4gICAgQGlmIG5vdCBtYXAuaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGNvbmRpdGlvbik7XG4gICAgICAkcHJlZml4OiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKTtcbiAgICAgICR2YWx1ZTogZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGNvbmRpdGlvbiwgJG9wZXJhdG9yKTtcblxuICAgICAgQGlmICgkcHJlZml4ID09ICdtYXgnIGFuZCAkdmFsdWUgPD0gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpIG9yXG4gICAgICAgICgkcHJlZml4ID09ICdtaW4nIGFuZCAkdmFsdWUgPiAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSlcbiAgICAgIHtcbiAgICAgICAgQHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmIG5vdCBsaXN0LmluZGV4KCRpbS1uby1tZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgQHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIHRydWU7XG59XG5cbi8vLy9cbi8vLyBQYXJzaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgS2l0dHkgR2lyYXVkZWxcbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLy9cblxuLy8vXG4vLy8gR2V0IG9wZXJhdG9yIG9mIGFuIGV4cHJlc3Npb25cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBvcGVyYXRvciBmcm9tXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gQW55IG9mIGA+PWAsIGA+YCwgYDw9YCwgYDxgLCBg4omlYCwgYOKJpGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKSB7XG4gIEBlYWNoICRvcGVyYXRvciBpbiAoJz49JywgJz4nLCAnPD0nLCAnPCcsICfiiaUnLCAn4omkJykge1xuICAgIEBpZiBzdHJpbmcuaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAgICAgQHJldHVybiAkb3BlcmF0b3I7XG4gICAgfVxuICB9XG5cbiAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAvLyByZWx5IG9uIHRoZSBgaW0tbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAvLyBmdW5jdGlvbnMgY2Fubm90IGJlIGNhbGxlZCBhbnl3aGVyZSBpbiBTYXNzLCB3ZSBuZWVkIHRvIGhhY2sgdGhlIGNhbGwgaW5cbiAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBpbS1sb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAkXzogaW0tbG9nKCdObyBvcGVyYXRvciBmb3VuZCBpbiBgI3skZXhwcmVzc2lvbn1gLicpO1xufVxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBkaW1lbnNpb24gZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgd2lkdGhgIG9yIGBoZWlnaHRgIChvciBwb3RlbnRpYWxseSBhbnl0aGluZyBlbHNlKVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHJpbmcuaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwYXJzZWQtZGltZW5zaW9uOiBzdHJpbmcuc2xpY2UoJGV4cHJlc3Npb24sIDAsICRvcGVyYXRvci1pbmRleCAtIDEpO1xuICAkZGltZW5zaW9uOiAnd2lkdGgnO1xuXG4gIEBpZiBzdHJpbmcubGVuZ3RoKCRwYXJzZWQtZGltZW5zaW9uKSA+IDAge1xuICAgICRkaW1lbnNpb246ICRwYXJzZWQtZGltZW5zaW9uO1xuICB9XG5cbiAgQHJldHVybiAkZGltZW5zaW9uO1xufVxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIHByZWZpeCBiYXNlZCBvbiBhbiBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gYG1pbmAgb3IgYG1heGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpIHtcbiAgQHJldHVybiBpZihsaXN0LmluZGV4KCgnPCcsICc8PScsICfiiaQnKSwgJG9wZXJhdG9yKSwgJ21heCcsICdtaW4nKTtcbn1cblxuLy8vXG4vLy8gR2V0IHZhbHVlIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCB2YWx1ZSBmcm9tXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yIGZyb20gYCRleHByZXNzaW9uYFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIEEgbnVtZXJpYyB2YWx1ZVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAkb3BlcmF0b3ItaW5kZXg6IHN0cmluZy5pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHZhbHVlOiBzdHJpbmcuc2xpY2UoJGV4cHJlc3Npb24sICRvcGVyYXRvci1pbmRleCArIHN0cmluZy5sZW5ndGgoJG9wZXJhdG9yKSk7XG5cbiAgQGlmIG1hcC5oYXMta2V5KCRicmVha3BvaW50cywgJHZhbHVlKSB7XG4gICAgJHZhbHVlOiBtYXAuZ2V0KCRicmVha3BvaW50cywgJHZhbHVlKTtcbiAgfSBAZWxzZSB7XG4gICAgJHZhbHVlOiB0by1udW1iZXIoJHZhbHVlKTtcbiAgfVxuXG4gICRpbnRlcnZhbDogbWFwLmdldCgkdW5pdC1pbnRlcnZhbHMsIG1hdGgudW5pdCgkdmFsdWUpKTtcblxuICBAaWYgbm90ICRpbnRlcnZhbCB7XG4gICAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAgIC8vIHJlbHkgb24gdGhlIGBpbS1sb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gICAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gICAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGltLWxvZyguLikge31gIGluc3RlYWQuXG4gICAgJF86IGltLWxvZygnVW5rbm93biB1bml0IGAje21hdGgudW5pdCgkdmFsdWUpfWAuJyk7XG4gIH1cblxuICBAaWYgJG9wZXJhdG9yID09ICc+JyB7XG4gICAgJHZhbHVlOiAkdmFsdWUgKyAkaW50ZXJ2YWw7XG4gIH0gQGVsc2UgaWYgJG9wZXJhdG9yID09ICc8JyB7XG4gICAgJHZhbHVlOiAkdmFsdWUgLSAkaW50ZXJ2YWw7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZTtcbn1cblxuLy8vXG4vLy8gUGFyc2UgYW4gZXhwcmVzc2lvbiB0byByZXR1cm4gYSB2YWxpZCBtZWRpYS1xdWVyeSBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIHBhcnNlXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gVmFsaWQgbWVkaWEgcXVlcnlcbi8vL1xuQGZ1bmN0aW9uIHBhcnNlLWV4cHJlc3Npb24oJGV4cHJlc3Npb24pIHtcbiAgLy8gSWYgaXQgaXMgcGFydCBvZiAkbWVkaWEtZXhwcmVzc2lvbnMsIGl0IGhhcyBubyBvcGVyYXRvclxuICAvLyB0aGVuIHRoZXJlIGlzIG5vIG5lZWQgdG8gZ28gYW55IGZ1cnRoZXIsIGp1c3QgcmV0dXJuIHRoZSB2YWx1ZVxuICBAaWYgbWFwLmhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbikge1xuICAgIEByZXR1cm4gbWFwLmdldCgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKTtcbiAgfVxuXG4gICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pO1xuICAkZGltZW5zaW9uOiBnZXQtZXhwcmVzc2lvbi1kaW1lbnNpb24oJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuXG4gIEByZXR1cm4gJygjeyRwcmVmaXh9LSN7JGRpbWVuc2lvbn06ICN7JHZhbHVlfSknO1xufVxuXG4vLy9cbi8vLyBTbGljZSBgJGxpc3RgIGJldHdlZW4gYCRzdGFydGAgYW5kIGAkZW5kYCBpbmRleGVzXG4vLy9cbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJGxpc3QgLSBMaXN0IHRvIHNsaWNlXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRzdGFydCBbMV0gLSBTdGFydCBpbmRleFxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkZW5kIFtsZW5ndGgoJGxpc3QpXSAtIEVuZCBpbmRleFxuLy8vXG4vLy8gQHJldHVybiB7TGlzdH0gU2xpY2VkIGxpc3Rcbi8vL1xuQGZ1bmN0aW9uIHNsaWNlKCRsaXN0LCAkc3RhcnQ6IDEsICRlbmQ6IGxpc3QubGVuZ3RoKCRsaXN0KSkge1xuICBAaWYgbGlzdC5sZW5ndGgoJGxpc3QpIDwgMSBvciAkc3RhcnQgPiAkZW5kIHtcbiAgICBAcmV0dXJuICgpO1xuICB9XG5cbiAgJHJlc3VsdDogKCk7XG5cbiAgQGZvciAkaSBmcm9tICRzdGFydCB0aHJvdWdoICRlbmQge1xuICAgICRyZXN1bHQ6IGxpc3QuYXBwZW5kKCRyZXN1bHQsIGxpc3QubnRoKCRsaXN0LCAkaSksIGNvbW1hKTtcbiAgfVxuXG4gIEByZXR1cm4gJHJlc3VsdDtcbn1cblxuLy8vL1xuLy8vIFN0cmluZyB0byBudW1iZXIgY29udmVydGVyXG4vLy8gQGF1dGhvciBLaXR0eSBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG4vLy9cbi8vLyBDYXN0cyBhIHN0cmluZyBpbnRvIGEgbnVtYmVyXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZyB8IE51bWJlcn0gJHZhbHVlIC0gVmFsdWUgdG8gYmUgcGFyc2VkXG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9XG4vLy9cblxuQGZ1bmN0aW9uIHRvLW51bWJlcigkdmFsdWUpIHtcbiAgQGlmIG1ldGEudHlwZS1vZigkdmFsdWUpID09ICdudW1iZXInIHtcbiAgICBAcmV0dXJuICR2YWx1ZTtcbiAgfSBAZWxzZSBpZiBtZXRhLnR5cGUtb2YoJHZhbHVlKSAhPSAnc3RyaW5nJyB7XG4gICAgJF86IGltLWxvZygnVmFsdWUgZm9yIGB0by1udW1iZXJgIHNob3VsZCBiZSBhIG51bWJlciBvciBhIHN0cmluZy4nKTtcbiAgfVxuXG4gICRmaXJzdC1jaGFyYWN0ZXI6IHN0cmluZy5zbGljZSgkdmFsdWUsIDEsIDEpO1xuICAkcmVzdWx0OiAwO1xuICAkZGlnaXRzOiAwO1xuICAkbWludXM6ICgkZmlyc3QtY2hhcmFjdGVyID09ICctJyk7XG4gICRudW1iZXJzOiAoXG4gICAgJzAnOiAwLFxuICAgICcxJzogMSxcbiAgICAnMic6IDIsXG4gICAgJzMnOiAzLFxuICAgICc0JzogNCxcbiAgICAnNSc6IDUsXG4gICAgJzYnOiA2LFxuICAgICc3JzogNyxcbiAgICAnOCc6IDgsXG4gICAgJzknOiA5LFxuICApO1xuXG4gIC8vIFJlbW92ZSArLy0gc2lnbiBpZiBwcmVzZW50IGF0IGZpcnN0IGNoYXJhY3RlclxuICBAaWYgKCRmaXJzdC1jaGFyYWN0ZXIgPT0gJysnIG9yICRmaXJzdC1jaGFyYWN0ZXIgPT0gJy0nKSB7XG4gICAgJHZhbHVlOiBzdHJpbmcuc2xpY2UoJHZhbHVlLCAyKTtcbiAgfVxuXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggc3RyaW5nLmxlbmd0aCgkdmFsdWUpIHtcbiAgICAkY2hhcmFjdGVyOiBzdHJpbmcuc2xpY2UoJHZhbHVlLCAkaSwgJGkpO1xuXG4gICAgQGlmIG5vdChsaXN0LmluZGV4KG1hcC5rZXlzKCRudW1iZXJzKSwgJGNoYXJhY3Rlcikgb3IgJGNoYXJhY3RlciA9PSAnLicpIHtcbiAgICAgIEByZXR1cm4gdG8tbGVuZ3RoKGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpLCBzdHJpbmcuc2xpY2UoJHZhbHVlLCAkaSkpO1xuICAgIH1cblxuICAgIEBpZiAkY2hhcmFjdGVyID09ICcuJyB7XG4gICAgICAkZGlnaXRzOiAxO1xuICAgIH0gQGVsc2UgaWYgJGRpZ2l0cyA9PSAwIHtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKiAxMCArIG1hcC5nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJGRpZ2l0czogJGRpZ2l0cyAqIDEwO1xuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIG1hdGguZGl2KG1hcC5nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpLCAkZGlnaXRzKTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpO1xufVxuXG4vLy9cbi8vLyBBZGQgYCR1bml0YCB0byBgJHZhbHVlYFxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGFkZCB1bml0IHRvXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICR1bml0IC0gU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB1bml0XG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gYCR2YWx1ZWAgZXhwcmVzc2VkIGluIGAkdW5pdGBcbi8vL1xuQGZ1bmN0aW9uIHRvLWxlbmd0aCgkdmFsdWUsICR1bml0KSB7XG4gICR1bml0czogKFxuICAgICdweCc6IDFweCxcbiAgICAnY20nOiAxY20sXG4gICAgJ21tJzogMW1tLFxuICAgICclJzogMSUsXG4gICAgJ2NoJzogMWNoLFxuICAgICdwYyc6IDFwYyxcbiAgICAnaW4nOiAxaW4sXG4gICAgJ2VtJzogMWVtLFxuICAgICdyZW0nOiAxcmVtLFxuICAgICdwdCc6IDFwdCxcbiAgICAnZXgnOiAxZXgsXG4gICAgJ3Z3JzogMXZ3LFxuICAgICd2aCc6IDF2aCxcbiAgICAndm1pbic6IDF2bWluLFxuICAgICd2bWF4JzogMXZtYXgsXG4gICk7XG5cbiAgQGlmIG5vdCBsaXN0LmluZGV4KG1hcC5rZXlzKCR1bml0cyksICR1bml0KSB7XG4gICAgJF86IGltLWxvZygnSW52YWxpZCB1bml0IGAjeyR1bml0fWAuJyk7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZSAqIG1hcC5nZXQoJHVuaXRzLCAkdW5pdCk7XG59XG5cbi8vL1xuLy8vIFRoaXMgbWl4aW4gYWltcyBhdCByZWRlZmluaW5nIHRoZSBjb25maWd1cmF0aW9uIGp1c3QgZm9yIHRoZSBzY29wZSBvZlxuLy8vIHRoZSBjYWxsLiBJdCBpcyBoZWxwZnVsIHdoZW4gaGF2aW5nIGEgY29tcG9uZW50IG5lZWRpbmcgYW4gZXh0ZW5kZWRcbi8vLyBjb25maWd1cmF0aW9uIHN1Y2ggYXMgY3VzdG9tIGJyZWFrcG9pbnRzIChyZWZlcnJlZCB0byBhcyB0d2Vha3BvaW50cylcbi8vLyBmb3IgaW5zdGFuY2UuXG4vLy9cbi8vLyBAYXV0aG9yIEtpdHR5IEdpcmF1ZGVsXG4vLy9cbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrcG9pbnRzIFsoKV0gLSBNYXAgb2YgdHdlYWtwb2ludHMgdG8gYmUgbWVyZ2VkIHdpdGggYCRicmVha3BvaW50c2Bcbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zIFsoKV0gLSBNYXAgb2YgdHdlYWtlZCBtZWRpYSBleHByZXNzaW9ucyB0byBiZSBtZXJnZWQgd2l0aCBgJG1lZGlhLWV4cHJlc3Npb25gXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgYnJlYWtwb2ludHMgd2l0aCBhIHR3ZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBtZWRpYSBleHByZXNzaW9ucyB3aXRoIGEgY3VzdG9tIG9uZVxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCBib3RoIGNvbmZpZ3VyYXRpb24gbWFwc1xuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpLCAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbkBtaXhpbiBtZWRpYS1jb250ZXh0KCR0d2Vha3BvaW50czogKCksICR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCkpIHtcbiAgLy8gU2F2ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkZ2xvYmFsLWJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHM7XG4gICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnM6ICRtZWRpYS1leHByZXNzaW9ucztcblxuICAvLyBVcGRhdGUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiBtYXAubWVyZ2UoJGJyZWFrcG9pbnRzLCAkdHdlYWtwb2ludHMpICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogbWFwLm1lcmdlKCRtZWRpYS1leHByZXNzaW9ucywgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zKSAhZ2xvYmFsO1xuXG4gIEBjb250ZW50O1xuXG4gIC8vIFJlc3RvcmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiAkZ2xvYmFsLWJyZWFrcG9pbnRzICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogJGdsb2JhbC1tZWRpYS1leHByZXNzaW9ucyAhZ2xvYmFsO1xufVxuXG4vLy8vXG4vLy8gaW5jbHVkZS1tZWRpYSBwdWJsaWMgZXhwb3NlZCBBUElcbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cblxuLy8vXG4vLy8gR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gYSBsaXN0IG9mIGNvbmRpdGlvbnNcbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHNpbmdsZSBzZXQgYnJlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCB0d28gc2V0IGJyZWFrcG9pbnRzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD10YWJsZXQnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGN1c3RvbSB2YWx1ZXNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzU4cHgnLCAnPDg1MHB4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBzZXQgYnJlYWtwb2ludHMgd2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+ZGVza3RvcCcsICc8PTEzNTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzdGF0aWMgZXhwcmVzc2lvblxuLy8vICBAaW5jbHVkZSBtZWRpYSgncmV0aW5hMngnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBNaXhpbmcgZXZlcnl0aGluZ1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj0zNTBweCcsICc8dGFibGV0JywgJ3JldGluYTN4JykgeyB9XG4vLy9cbkBtaXhpbiBtZWRpYSgkY29uZGl0aW9ucy4uLikge1xuICBAaWYgKCRpbS1tZWRpYS1zdXBwb3J0IGFuZCBsaXN0Lmxlbmd0aCgkY29uZGl0aW9ucykgPT0gMCkgb3JcbiAgICAobm90ICRpbS1tZWRpYS1zdXBwb3J0IGFuZCBpbS1pbnRlcmNlcHRzLXN0YXRpYy1icmVha3BvaW50KCRjb25kaXRpb25zLi4uKSlcbiAge1xuICAgIEBjb250ZW50O1xuICB9IEBlbHNlIGlmICgkaW0tbWVkaWEtc3VwcG9ydCBhbmQgbGlzdC5sZW5ndGgoJGNvbmRpdGlvbnMpID4gMCkge1xuICAgIEBtZWRpYSAje3N0cmluZy51bnF1b3RlKHBhcnNlLWV4cHJlc3Npb24obGlzdC5udGgoJGNvbmRpdGlvbnMsIDEpKSl9IHtcbiAgICAgIC8vIFJlY3Vyc2l2ZSBjYWxsXG4gICAgICBAaW5jbHVkZSBtZWRpYShzbGljZSgkY29uZGl0aW9ucywgMikuLi4pIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIucHJlbG9hZGVyIHtcclxuICBAZXh0ZW5kICVjb3ZlcjtcclxuICBAZXh0ZW5kICVjZW50ZXI7XHJcblxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItZ2FsbGVyeTtcclxuICBjb2xvcjogJGNvbG9yLW1lcmxpbjtcclxuXHJcbiAgei1pbmRleDogeigncHJlbG9hZGVyJyk7XHJcbn1cclxuXHJcbi5wcmVsb2FkZXJfX251bWJlciB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBmb250LXNpemU6IDZyZW07XHJcbn1cclxuXHJcbi5wcmVsb2FkZXJfX251bWJlcl9fdGV4dCB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcbiIsIi5ob21lIHtcclxuICBAZXh0ZW5kICVwYWdlO1xyXG5cclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItZ2FsbGVyeTtcclxuXHJcbiAgLy8gQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAvLyAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgLy8gfVxyXG59XHJcblxyXG4uaG9tZV9fd3JhcHBlciB7XHJcbiAgQGV4dGVuZCAlcGFnZV9fd3JhcHBlcjtcclxufVxyXG5cclxuLmhvbWVfX2lubmVyIHtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiAgd2lkdGg6IDk1JTtcclxuICBwYWRkaW5nOiAwIDFyZW07XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcblxyXG4gIHBhZGRpbmctdG9wOiAzMHJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxMHJlbTtcclxufVxyXG5cclxuLmhvbWVfX2Z1bGwtbmFtZSB7XHJcbiAgZm9udC1mYW1pbHk6ICRmb250LWxhdG87XHJcbiAgZm9udC1zaXplOiAxN3JlbTtcclxuICBmb250LXdlaWdodDogOTAwO1xyXG4gIGxpbmUtaGVpZ2h0OiAwLjg7XHJcbiAgbWFyZ2luLWxlZnQ6IC0xcmVtO1xyXG59XHJcblxyXG4uaG9tZV9fZW1haWwge1xyXG4gIEBleHRlbmQgJWxpbmstLWhpZGRlbjtcclxuXHJcbiAgZm9udC1mYW1pbHk6ICRmb250LWxhdG87XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gIGZvbnQtc2l6ZTogM3JlbTtcclxuICBtYXJnaW4tdG9wOiAxcmVtO1xyXG59XHJcblxyXG4uaG9tZV9fYm90dG9tIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBtYXJnaW4tdG9wOiAxMHJlbTtcclxuICBtYXJnaW4tYm90dG9tOiA3cmVtO1xyXG59XHJcblxyXG4uaG9tZV9fam9iLXRpdGxlIHtcclxuICBmb250LWZhbWlseTogJGZvbnQtbGF0bztcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGZvbnQtc2l6ZTogNC44cmVtO1xyXG4gIGFsaWduLXNlbGY6IGVuZDtcclxufVxyXG5cclxuLmhvbWVfX2luZm8ge1xyXG4gIGZvbnQtZmFtaWx5OiAkZm9udC1sYXRvO1xyXG4gIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgZm9udC1zaXplOiAzcmVtO1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG59XHJcblxyXG4uaG9tZV9fc29jaWFscyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuXHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGdhcDogMXJlbTtcclxuXHJcbiAgbWFyZ2luLXRvcDogNHJlbTtcclxufVxyXG5cclxuLmhvbWVfX3NvY2lhbF9fbGluayB7XHJcbiAgQGV4dGVuZCAlbGluay0taGlkZGVuO1xyXG5cclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICBmb250LXNpemU6IDIuNHJlbTtcclxuICBvcGFjaXR5OiAwLjc7XHJcbn1cclxuXHJcbi5ob21lX19saW5lIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItbWVybGluO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMC44cmVtO1xyXG59XHJcblxyXG4vLyBQUk9KRUNUU1xyXG5cclxuLmhvbWVfX3Byb2plY3RzIHtcclxuICB3aWR0aDogOTUlO1xyXG4gIHBhZGRpbmc6IDAgMXJlbTtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHJlbTtcclxufVxyXG5cclxuLmhvbWVfX3Byb2plY3Qge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NWZyIDU1ZnI7XHJcbiAgZ2FwOiAzLjVyZW07XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nOiAwIDJyZW07XHJcbiAgfVxyXG5cclxuICAmOm5vdCg6bGFzdC1vZi10eXBlKSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHJlbTtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAwLjFyZW07XHJcblxyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIGJvdHRvbTogLTE1cmVtO1xyXG5cclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLW1lcmxpbjtcclxuICAgICAgb3BhY2l0eTogMC4yNTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5ob21lX19wcm9qZWN0X19sYWJlbCB7XHJcbiAgZm9udC1zaXplOiAycmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMnJlbTtcclxuICBtYXJnaW4tYm90dG9tOiA1cmVtO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbi5ob21lX19wcm9qZWN0X190aXRsZXMge1xyXG4gIG1hcmdpbi1ib3R0b206IDhyZW07XHJcbn1cclxuXHJcbi5ob21lX19wcm9qZWN0X190aXRsZSB7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBmb250LXNpemU6IDhyZW07XHJcbiAgbWFyZ2luLWxlZnQ6IC0wLjVyZW07XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cclxuICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgbGluZS1oZWlnaHQ6IDAuODtcclxuICB9XHJcbn1cclxuXHJcbi5ob21lX19wcm9qZWN0X19yb2xlIHtcclxuICBmb250LXNpemU6IDEuOHJlbTtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uaG9tZV9fcHJvamVjdF9fZGVzY3JpcHRpb24ge1xyXG4gIGZvbnQtc2l6ZTogM3JlbTtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIG1hcmdpbi1ib3R0b206IDNyZW07XHJcbiAgbWF4LXdpZHRoOiA2MHJlbTtcclxuICBsaW5lLWhlaWdodDogMS4xO1xyXG59XHJcblxyXG4uaG9tZV9fcHJvamVjdF9fZXhwbG9yZSB7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gIG9wYWNpdHk6IDAuNTtcclxuXHJcbiAgJjpob3ZlciAuaG9tZV9fcHJvamVjdF9fZXhwbG9yZS0tYXJyb3cge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XHJcbiAgfVxyXG59XHJcblxyXG4uaG9tZV9fcHJvamVjdF9fZXhwbG9yZS0tbGluayB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uaG9tZV9fcHJvamVjdF9fZXhwbG9yZS0tYXJyb3cge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzICRlYXNlLWluLW91dDtcclxuICB3aWR0aDogNC4zcmVtO1xyXG4gIGhlaWdodDogMC44cmVtO1xyXG59XHJcblxyXG4uaG9tZV9fcHJvamVjdF9fdmlkZW9fX2hvbGRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLW1lcmxpbjtcclxuICBwYWRkaW5nOiAwLjc1cmVtO1xyXG4gIGJvcmRlci1yYWRpdXM6IDFyZW07XHJcbiAgYm94LXNoYWRvdzogMCAwLjVyZW0gMXJlbSByZ2JhKCRjb2xvci1tZXJsaW4sIDAuMyk7XHJcbn1cclxuXHJcbi5ob21lX19wcm9qZWN0X192aWRlb19fbGluayB7XHJcbn1cclxuXHJcbi5jb2wtLTIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmhvbWVfX3Byb2plY3RfX3ZpZGVvIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXItcmFkaXVzOiAxcmVtO1xyXG59XHJcblxyXG4uaG9tZV9fcHJvamVjdF9faW1hZ2VfX2hvbGRlciB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJvdHRvbTogLTNyZW07XHJcbiAgbGVmdDogLTRyZW07XHJcbn1cclxuXHJcbi5ob21lX19wcm9qZWN0X19pbWFnZSB7XHJcbiAgd2lkdGg6IDIwcmVtO1xyXG59XHJcblxyXG4vLyBBYm91dFxyXG5cclxuLmhvbWVfX2Zvb3RlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLW1lcmxpbjtcclxuICBjb2xvcjogJGNvbG9yLWdhbGxlcnk7XHJcbiAgbWFyZ2luLWJvdHRvbTogLTFyZW07XHJcbiAgcGFkZGluZzogMTByZW0gMDtcclxuXHJcbiAgJl9fd3JhcHBlciB7XHJcbiAgICB3aWR0aDogOTUlO1xyXG4gICAgcGFkZGluZzogMCAxcmVtO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcblxyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuXHJcbiAgICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5cclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItZ2FsbGVyeTtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IC0xMHJlbTtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgb3BhY2l0eTogMC42O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmhvbWVfX2Fib3V0IHtcclxuICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXJlbTtcclxuICB9XHJcbn1cclxuXHJcbi5ob21lX19hYm91dF9fbGFiZWwsXHJcbi5ob21lX19za2lsbHNfX2xhYmVsIHtcclxuICBmb250LXNpemU6IDhyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBtYXJnaW4tYm90dG9tOiAycmVtO1xyXG59XHJcblxyXG4uaG9tZV9fYWJvdXRfX2Rlc2NyaXB0aW9uIHtcclxuICBmb250LXNpemU6IDEuOHJlbTtcclxuICBvcGFjaXR5OiAwLjc1O1xyXG4gIHdpZHRoOiA1MHJlbTtcclxuXHJcbiAgJiBwIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XHJcbiAgfVxyXG59XHJcblxyXG4uaG9tZV9fc2tpbGxzX19jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBnYXA6IDFyZW07XHJcbn1cclxuXHJcbi5ob21lX19za2lsbHNfc2tpbGwge1xyXG4gIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yLWdhbGxlcnk7XHJcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xyXG5cclxuICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuIiwiLnByb2plY3Qge1xyXG4gIEBleHRlbmQgJXBhZ2U7XHJcblxyXG4gIGNvbG9yOiAkY29sb3ItbWVybGluO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1nYWxsZXJ5O1xyXG5cclxuICAvLyBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gIC8vICAgcG9zaXRpb246IHN0YXRpYztcclxuICAvLyB9XHJcbn1cclxuXHJcbi5wcm9qZWN0X193cmFwcGVyIHtcclxuICBAZXh0ZW5kICVwYWdlX193cmFwcGVyO1xyXG5cclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5uYXZpZ2F0aW9uX19saW5rX190b19faG9tZSB7XHJcbiAgQGV4dGVuZCAlbGluay0taGlkZGVuO1xyXG5cclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiA0cmVtO1xyXG4gIGxlZnQ6IDRyZW07XHJcblxyXG4gIGZvbnQtc2l6ZTogMnJlbTtcclxuICBmb250LXdlaWdodDogOTAwO1xyXG5cclxuICBsaW5lLWhlaWdodDogMS40O1xyXG5cclxuICB6LWluZGV4OiB6KCdsaW5rJyk7XHJcbn1cclxuXHJcbi5saW5rX190b19fcHJvamVjdCxcclxuLmxpbmtfX3RvX19naXRodWIge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICByaWdodDogNHJlbTtcclxuXHJcbiAgd2lkdGg6IDhyZW07XHJcbiAgaGVpZ2h0OiA4cmVtO1xyXG5cclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItbWVybGluO1xyXG4gIGNvbG9yOiAkY29sb3ItZ2FsbGVyeTtcclxuXHJcbiAgdHJhbnNpdGlvbjogc2NhbGUgMC40cyAkZWFzZS1vdXQtZXhwbztcclxuXHJcbiAgcGFkZGluZzogMnJlbTtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcblxyXG4gIHotaW5kZXg6IHooJ2xpbmsnKTtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAmOmhvdmVyIHtcclxuICAgIHNjYWxlOiAxLjA1O1xyXG4gIH1cclxufVxyXG5cclxuLmxpbmtfX3RvX19wcm9qZWN0IHtcclxuICBib3R0b206IDRyZW07XHJcblxyXG4gICZfX3N2ZyB7XHJcbiAgICB3aWR0aDogMy43cmVtO1xyXG4gICAgaGVpZ2h0OiAzLjdyZW07XHJcbiAgfVxyXG59XHJcblxyXG4ubGlua19fdG9fX2dpdGh1YiB7XHJcbiAgYm90dG9tOiAxNHJlbTtcclxuXHJcbiAgJl9fc3ZnIHtcclxuICAgIHdpZHRoOiA0LjNyZW07XHJcbiAgICBoZWlnaHQ6IDMuOHJlbTtcclxuICB9XHJcbn1cclxuXHJcbi5wcm9qZWN0X19hYm91dCB7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gIHdpZHRoOiA5NSU7XHJcbiAgcGFkZGluZzogMCAxcmVtO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG5cclxuICBAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luOiAxMHJlbSBhdXRvO1xyXG4gICAgcGFkZGluZzogMnJlbSAwO1xyXG4gICAgYWxpZ24tY29udGVudDogc3RhcnQ7XHJcbiAgfVxyXG59XHJcblxyXG4ucHJvamVjdF9fbW9yZV9faW5mb19fZGVza3RvcCB7XHJcbn1cclxuXHJcbi5wcm9qZWN0X19hYm91dF9fdGl0bGVzIHtcclxuICBtYXJnaW4tYm90dG9tOiA2cmVtO1xyXG59XHJcbi5wcm9qZWN0X190aXRsZSB7XHJcbiAgZm9udC1zaXplOiA4cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgbWFyZ2luLWxlZnQ6IC0wLjVyZW07XHJcbn1cclxuXHJcbi5wcm9qZWN0X19yb2xlIHtcclxuICBmb250LXNpemU6IDEuOHJlbTtcclxufVxyXG5cclxuLnByb2plY3RfX2Rlc2NyaXB0aW9uIHtcclxuICBmb250LXNpemU6IDMuNHJlbTtcclxuXHJcbiAgbWFyZ2luLWJvdHRvbTogMTVyZW07XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjE7XHJcbn1cclxuXHJcbi5wcm9qZWN0X19pbmZvIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgQGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBnYXA6IDJyZW07XHJcbiAgfVxyXG59XHJcblxyXG4ucHJvamVjdF9faW5mb19fbGFiZWwge1xyXG4gIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxufVxyXG5cclxuLnByb2plY3RfX2luZm9fX3RleHQge1xyXG4gIGZvbnQtc2l6ZTogMi40cmVtO1xyXG4gIHdpZHRoOiA0MHJlbTtcclxufVxyXG5cclxuLnByb2plY3RfX3Nob3djYXNlcyB7XHJcbiAgd2lkdGg6IDg1JTtcclxuICBwYWRkaW5nOiAwIDFyZW07XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi5wcm9qZWN0X19zaG93Y2FzZV9fdmlkZW8ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ucHJvamVjdF9faW1nIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDg4LjNyZW07XHJcblxyXG4gIEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XHJcbiAgICBoZWlnaHQ6IDMwcmVtO1xyXG4gIH1cclxuXHJcbiAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTByZW07XHJcbiAgfVxyXG59XHJcbiIsIi5uYXZpZ2F0aW9uIHtcclxuICBAZXh0ZW5kICVjb3ZlcjtcclxuICBjb2xvcjogJGNvbG9yLW1lcmxpbjtcclxuICB6LWluZGV4OiB6KCduYXZpZ2F0aW9uJyk7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGxlZnQ6IDA7XHJcbiAgdG9wOiAxcmVtO1xyXG4gIGhlaWdodDogYXV0bztcclxuXHJcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn1cclxuXHJcbi5uYXZpZ2F0aW9uX19saXN0IHtcclxuICBwb2ludGVyLWV2ZW50czogYXV0bztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGdhcDogMnJlbTtcclxuICB3aWR0aDogOTUlO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG4ubmF2aWdhdGlvbl9faXRlbV9faG9tZSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMnJlbTtcclxuICByaWdodDogMnJlbTtcclxufVxyXG5cclxuLm5hdmlnYXRpb25fX2xpbmsge1xyXG4gIEBleHRlbmQgJWxpbmstLWhpZGRlbjtcclxuICBmb250LXNpemU6IDJyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICBsaW5lLWhlaWdodDogMS41O1xyXG59XHJcblxyXG4ubmF2aWdhdGlvbl9fbGlua19fY3Yge1xyXG4gIGNvbG9yOiAkY29sb3ItZ2FsbGVyeTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItbWVybGluO1xyXG5cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gIHdpZHRoOiAxMy4zcmVtO1xyXG4gIGhlaWdodDogNC41cmVtO1xyXG5cclxuICBib3JkZXItcmFkaXVzOiAxcmVtO1xyXG5cclxuICBmb250LXNpemU6IDMuNnJlbTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gIGxpbmUtaGVpZ2h0OiAxO1xyXG59XHJcbiIsIi5mb290ZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG5cclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItbWVybGluO1xyXG4gIGNvbG9yOiAkY29sb3ItZ2FsbGVyeTtcclxuXHJcbiAgbWFyZ2luLXRvcDogNXJlbTtcclxufVxyXG5cclxuLmZvb3Rlcl9fd3JhcHBlciB7XHJcbiAgd2lkdGg6IDk1JTtcclxuICBwYWRkaW5nOiAxMHJlbSAxcmVtO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG5cclxuICAmID4gZGl2IHtcclxuICAgIG1hcmdpbi1ib3R0b206IDRyZW07XHJcbiAgfVxyXG59XHJcblxyXG4uZm9vdGVyX19sYWJlbCB7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBmb250LXNpemU6IDhyZW07XHJcbiAgbWFyZ2luLWxlZnQ6IC0wLjVyZW07XHJcbn1cclxuXHJcbi5mb290ZXJfX2VtYWlsIHtcclxuICBAZXh0ZW5kICVsaW5rLS1oaWRkZW47XHJcbiAgZm9udC1zaXplOiAycmVtO1xyXG59XHJcblxyXG4uZm9vdGVyX19zb2NpYWxzIHtcclxuICB3aWR0aDogMzByZW07XHJcbiAgb3BhY2l0eTogMC43O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHJlbTtcclxufVxyXG5cclxuLmZvb3Rlcl9fc29jaWFsX19saW5rIHtcclxuICBAZXh0ZW5kICVsaW5rLS1oaWRkZW47XHJcblxyXG4gIGZvbnQtc2l6ZTogMnJlbTtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuXHJcbiAgbGluZS1oZWlnaHQ6IDEuMTtcclxufVxyXG5cclxuLmZvb3Rlcl9fY29weXJpZ2h0IHtcclxuICBmb250LXNpemU6IDJyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgbGluZS1oZWlnaHQ6IDEuMjtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=*/