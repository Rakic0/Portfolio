/*! For license information please see main.91f023ff40a196b76b52.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatewebsite_template("main",{"./app/classes/Page.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>f});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/lodash/each.js"),a=s.n(n),o=s("./node_modules/lodash/map.js"),l=s.n(o),h=s("./node_modules/normalize-wheel/index.js"),r=s.n(h),m=s("./node_modules/prefix/index.js"),d=s.n(m),c=s("./app/animations/Title.js"),u=s("./app/animations/Paragraph.js"),p=s("./app/animations/Label.js"),g=s("./app/animations/Highlight.js"),w=s("./app/classes/AsyncLoad.js");class f{constructor({id:t,element:e,elements:s}){this.id=t,this.selector=e,this.selectorChildren={...s,animationsTitles:'[data-animation="title"]',animationsParagraphs:'[data-animation="paragraph"]',animationsLabels:'[data-animation="label"]',animationsHighlights:'[data-animation="highlight"]',preloaders:"[data-src]"},this.transformPrefix=d()("transform"),this.scrollOffset=0,this.onMouseWheelEvent=this.onMouseWheel.bind(this),this.onTouchStartEvent=this.onTouchStart.bind(this),this.onTouchEndEvent=this.onTouchEnd.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},a()(this.selectorChildren,((t,e)=>{t instanceof window.HTMLElement||t instanceof window.NodeList||Array.isArray(t)?this.elements[e]=t:(this.elements[e]=document.querySelectorAll(t),0===this.elements[e].length?this.elements[e]=null:1===this.elements[e].length&&(this.elements[e]=document.querySelector(t)))})),this.createAnimations(),this.createPreloader()}createPreloader(){this.preloaders=l()(this.elements.preloaders,(t=>new w.default({element:t})))}createAnimations(){this.animations=[],this.animationsHighlights=l()(this.elements.animationsHighlights,(t=>new g.default({element:t}))),this.animations.push(...this.animationsHighlights),this.animationsTitles=l()(this.elements.animationsTitles,(t=>new c.default({element:t}))),this.animations.push(...this.animationsTitles),this.animationsParagraphs=l()(this.elements.animationsParagraphs,(t=>new u.default({element:t}))),this.animations.push(...this.animationsParagraphs),this.animationsLabels=l()(this.elements.animationsLabels,(t=>new p.default({element:t}))),this.animations.push(...this.animationsLabels)}show(t){return new Promise((e=>{this.animationIn=i.default.timeline(),t?this.animationIn=t:(this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1})),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((t=>{this.removeEventListeners(),this.animationOut=i.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:t})}))}onMouseWheel(t){const{pixelY:e}=r()(t);this.scroll.target+=e}onTouchStart(t){this.touchStart=t.touches[0].clientY}onTouchEnd(t){this.touchEnd=t.changedTouches[0].clientY,this.scroll.target+=-1*(this.touchEnd-this.touchStart)}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current<.01&&(this.scroll.current=0),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),a()(this.animations,(t=>t.onResize()))}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent),window.addEventListener("touchstart",this.onTouchStartEvent),window.addEventListener("touchend",this.onTouchEndEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(t){t.h=()=>"8a29e6b895381e5a85ff"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,