/*! For license information please see main.0101da20e15845edde5f.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatewebsite_template("main",{"./app/classes/Page.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>v});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/lodash/each.js"),a=s.n(n),o=s("./node_modules/lodash/map.js"),h=s.n(o),l=s("./node_modules/normalize-wheel/index.js"),r=s.n(l),m=s("./node_modules/prefix/index.js"),u=s.n(m),c=s("./app/animations/Title.js"),d=s("./app/animations/Paragraph.js"),p=s("./app/animations/Label.js"),g=s("./app/animations/Highlight.js"),w=s("./app/classes/AsyncLoad.js");class v{constructor({id:t,element:e,elements:s}){this.id=t,this.selector=e,this.selectorChildren={...s,animationsTitles:'[data-animation="title"]',animationsParagraphs:'[data-animation="paragraph"]',animationsLabels:'[data-animation="label"]',animationsHighlights:'[data-animation="highlight"]',preloaders:"[data-src]"},this.transformPrefix=u()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this),this.onTouhcStartEvent=this.onTouchStart.bind(this),this.onTouhcMoveEvent=this.onTouchMove.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},a()(this.selectorChildren,((t,e)=>{t instanceof window.HTMLElement||t instanceof window.NodeList||Array.isArray(t)?this.elements[e]=t:(this.elements[e]=document.querySelectorAll(t),0===this.elements[e].length?this.elements[e]=null:1===this.elements[e].length&&(this.elements[e]=document.querySelector(t)))})),this.createAnimations(),this.createPreloader()}createPreloader(){this.preloaders=h()(this.elements.preloaders,(t=>new w.default({element:t})))}createAnimations(){this.animations=[],this.animationsHighlights=h()(this.elements.animationsHighlights,(t=>new g.default({element:t}))),this.animations.push(...this.animationsHighlights),this.animationsTitles=h()(this.elements.animationsTitles,(t=>new c.default({element:t}))),this.animations.push(...this.animationsTitles),this.animationsParagraphs=h()(this.elements.animationsParagraphs,(t=>new d.default({element:t}))),this.animations.push(...this.animationsParagraphs),this.animationsLabels=h()(this.elements.animationsLabels,(t=>new p.default({element:t}))),this.animations.push(...this.animationsLabels)}show(t){return new Promise((e=>{this.animationIn=i.default.timeline(),t?this.animationIn=t:(this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1})),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((t=>{this.removeEventListeners(),this.animationOut=i.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:t})}))}onMouseWheel(t){const{pixelY:e}=r()(t);this.scroll.target+=e}onTouchStart(t){this.touchStart=t.touches[0].clientY}onTouchMove(t){this.touchCurrent=t.touches[0].clientY,this.touchStart>this.touchCurrent?(console.log(this.touchCurrent),this.scroll.target+=this.touchCurrent/10):this.touchStart<this.touchCurrent&&(this.scroll.target+=-this.touchCurrent/10)}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current<.01&&(this.scroll.current=0),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),a()(this.animations,(t=>t.onResize()))}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent),window.addEventListener("touchmove",this.onTouhcMoveEvent),window.addEventListener("touchstart",this.onTouhcStartEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(t){t.h=()=>"a6a7d8d1245e7ae9cabb"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,